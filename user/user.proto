syntax = "proto3";

import "google/protobuf/any.proto";

package user;
option go_package="./user";


//心跳 连接测试
message Request {
  string ping = 1;
}

message Response {
  string pong = 1;
}

//查看当前推特id是否存在 返回用户id
message CheckTwitterIdRequest {
  string twitter_id = 1;
}

message CheckTwitterIdResponse {
  string user_id = 1;
}

//创建用户
message CreateUserRequest {
  string twitter_id = 1;  //推特id
  string twitter_code = 2;  //推特code
}

message CreateUserResponse {
  string user_id = 1;  //用户id
}

//建立邀请关系
message CreateInviteRequest {
  string user_id = 1;  //用户id
  string invite_id = 2;  //id
}

message CreateInviteResponse {
  string invitation_id = 1;  //邀请id
}

// 检查今天有没有邀请人(给任务服务提供)
message  CheckTodayInviteRequest {
  string user_id = 1;  //用户id
}

message CheckTodayInviteResponse {
  bool is_invite = 1;  //是否邀请
}

// 添加用户信息
message AddUserInfoRequest {
  string user_id = 1;  //用户id
  string twitter_name = 2;  //推特名
  string user_name = 3;  //用户名
  string user_avatar = 4;  //用户头像
}

// 添加用户信息
message AddUserInfoResponse {
  bool is_success = 1;  //是否成功
}


// 查询用户
message QueryUserRequest {
  string user_id = 1;  //用户id
}

message QueryUserResponse {
  string twitter_name = 1;  //推特名
  string user_name = 2;   //用户名
  string user_avatar = 3; //用户头像
  int64 is_new = 4; //是否新用户 1新用户 0老用户
}


// 用户加入黑名单
message  AddBlackListRequest {
  int64 user_id = 1;  //用户id
  string black_user_id = 2;  //黑名单用户id
  int64 ban_days = 3;  //封禁天数
  int64 ban_type = 4;  //封禁类型 0:永久封禁 1:临时封禁
}

message AddBlackListResponse {
  bool is_success = 1;  //是否成功
}

// 查询黑名单
message  QueryBlackListRequest {
  int64 user_id = 1;  //用户id
}

message QueryBlackListResponse {
  int64 black_user_id = 1;  //黑名单用户id
}

// 用户移除黑名单
message  RemoveBlackListRequest {
  int64 user_id = 1;  //用户id
  string black_user_id = 2;  //黑名单用户id

}

message RemoveBlackListResponse {
  bool is_success = 1;  //是否成功
}

// 添加管理员
message  AddAdminRequest {
  string admin_name = 1;  //管理员名
  string admin_passwd = 2;  //管理员密码
}

message AddAdminResponse {
  bool is_success = 1;  //是否成功
}

// 管理员登录
message  AdminLoginRequest {
  string admin_name = 1;  //管理员名
  string admin_passwd = 2;  //管理员密码
}

message AdminLoginResponse {
  int64 admin_user_id = 1;  //管理员id
}

// 删除管理员
message  RemoveAdminRequest {
  int64 admin_user_id = 1;  //管理员id
}
// 删除管理员
message RemoveAdminResponse {
  bool is_success = 1;  //是否成功
}


// 获取帮助分类
message  GetHelpCategoriesRequest {
  //language language = 1;  //语言
}

// 获取帮助分类数组
message HelpCategory {
  int64  helpCategoryId = 1;  //帮助分类id
  int64  createdAt = 2;  //创建时间戳
  int64  categoryStatus = 3;  //分类状态 # 0:上架 1:下架
}

// 获取帮助分类
message    GetHelpCategoriesResponse {
  repeated HelpCategory help_categories = 1;  //帮助分类
}


// 创建帮助分类
message CreateHelpCategoryRequest {
  int64  createdAt = 2;  //创建时间戳
  int64  categoryStatus = 3;  //分类状态 # 0:上架 1:下架
}

message CreateHelpCategoryResponse {
  bool is_success = 1;  //是否成功
}

// 删除帮助分类
message DeleteHelpCategoryRequest {
  int64  helpCategoryId = 1;  //帮助分类id
}

message DeleteHelpCategoryResponse {
  bool is_success = 1;  //是否成功
}

//  编辑帮助分类
message EditHelpCategoryRequest {
  int64  helpCategoryId = 1;  //帮助分类id
  int64  createdAt = 2;  //创建时间戳
  int64  categoryStatus = 3;  //分类状态 # 0:上架 1:下架
}

message EditHelpCategoryResponse {
  bool is_success = 1;  //是否成功
}



// 新建帮助分类翻译
message CreateHelpCategoryTranslationRequest {
  int64  helpCategoryId = 1;  //帮助分类id
  string  language = 2;  //语言
  string  categoryName = 3;  //分类名称
}

message CreateHelpCategoryTranslationResponse {
  bool is_success = 1;  //是否成功
}

// 删除帮助分类翻译
message DeleteHelpCategoryTranslationRequest {
  int64  helpCategoryId = 1;  //帮助分类id
  string  language = 2;  //语言
}

message DeleteHelpCategoryTranslationResponse {
  bool is_success = 1;  //是否成功
}

// 获取帮助分类翻译
message GetHelpCategoryTranslationsRequest {
  int64  helpCategoryId = 1;  //帮助分类id
  string language = 2;  //语言
}

message   HelpCategoryTranslation {
  int64  helpCategoryId = 1;  //帮助分类id
  string  language = 2;  //语言
  string  categoryName = 3;  //分类名称
}

message GetHelpCategoryTranslationsResponse {
repeated HelpCategoryTranslation help_category_translations = 1;  //帮助分类翻译
}



service User {
  rpc Ping(Request) returns(Response);      //心跳 连接测试
  rpc CheckTwitterId(CheckTwitterIdRequest) returns(CheckTwitterIdResponse);  // 查看当前推特id是否存在 返回用户id
  rpc CreateUser(CreateUserRequest) returns(CreateUserResponse);  //创建用户
  rpc CreateInvite(CreateInviteRequest) returns(CreateInviteResponse);  //建立邀请关系
  rpc CheckTodayInvite(CheckTodayInviteRequest) returns(CheckTodayInviteResponse);  // 检查今天有没有邀请人(给任务服务提供)
  rpc AddUserInfo(AddUserInfoRequest) returns(AddUserInfoResponse);  // 添加用户信息
  rpc QueryUser(QueryUserRequest) returns(QueryUserResponse);  // 查询用户信息


  rpc AddAdmin(AddAdminRequest) returns(AddAdminResponse);  // 添加管理员
  rpc AdminLogin(AdminLoginRequest) returns(AdminLoginResponse);  // 管理员登录
  rpc RemoveAdmin(RemoveAdminRequest) returns(RemoveAdminResponse);  // 删除管理员


  rpc AddBlackList(AddBlackListRequest) returns(AddBlackListResponse);  // 用户加入黑名单
  rpc QueryBlackList(QueryBlackListRequest) returns(QueryBlackListResponse);  // 查询黑名单
  rpc RemoveBlackList(RemoveBlackListRequest) returns(RemoveBlackListResponse);  // 用户移除黑名单


  //TODO:需要测试一下   6.4日前 将这部分进行测试  编写测试用例
  //TODO:6.4日前 将这部分的api接口给到前端  让前端进行修改  6.4日前完成
  //TODO:6.5日前 将用户服务部署到一台测试服务器上(尝试使用 自动化部署来构建好前端能用的测试环境)  最好集  测试和部署与一体

  rpc GetHelpCategories(GetHelpCategoriesRequest) returns(GetHelpCategoriesResponse);  // 获取上架的帮助分类

  rpc CreateHelpCategory(CreateHelpCategoryRequest) returns(CreateHelpCategoryResponse);  // 新建帮助分类

  rpc DeleteHelpCategory(DeleteHelpCategoryRequest) returns(DeleteHelpCategoryResponse);  // 删除帮助分类

  rpc EditHelpCategory(EditHelpCategoryRequest) returns(EditHelpCategoryResponse);  // 编辑帮助分类

  rpc CreateHelpCategoryTranslation(CreateHelpCategoryTranslationRequest) returns(CreateHelpCategoryTranslationResponse);  // 新建帮助分类翻译

  rpc DeleteHelpCategoryTranslation(DeleteHelpCategoryTranslationRequest) returns(DeleteHelpCategoryTranslationResponse);  // 删除帮助分类翻译

  rpc GetHelpCategoryTranslations(GetHelpCategoryTranslationsRequest) returns(GetHelpCategoryTranslationsResponse);  // 获取帮助分类翻译


}

