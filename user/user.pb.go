// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v4.22.2
// source: user.proto

package user

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/anypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

//心跳 连接测试
type Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ping string `protobuf:"bytes,1,opt,name=ping,proto3" json:"ping,omitempty"`
}

func (x *Request) Reset() {
	*x = Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Request) ProtoMessage() {}

func (x *Request) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Request.ProtoReflect.Descriptor instead.
func (*Request) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{0}
}

func (x *Request) GetPing() string {
	if x != nil {
		return x.Ping
	}
	return ""
}

type Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pong string `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
}

func (x *Response) Reset() {
	*x = Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response) ProtoMessage() {}

func (x *Response) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response.ProtoReflect.Descriptor instead.
func (*Response) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{1}
}

func (x *Response) GetPong() string {
	if x != nil {
		return x.Pong
	}
	return ""
}

//查看当前推特id是否存在 返回用户id
type CheckTwitterIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TwitterId string `protobuf:"bytes,1,opt,name=twitter_id,json=twitterId,proto3" json:"twitter_id,omitempty"`
}

func (x *CheckTwitterIdRequest) Reset() {
	*x = CheckTwitterIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckTwitterIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckTwitterIdRequest) ProtoMessage() {}

func (x *CheckTwitterIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckTwitterIdRequest.ProtoReflect.Descriptor instead.
func (*CheckTwitterIdRequest) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{2}
}

func (x *CheckTwitterIdRequest) GetTwitterId() string {
	if x != nil {
		return x.TwitterId
	}
	return ""
}

type CheckTwitterIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *CheckTwitterIdResponse) Reset() {
	*x = CheckTwitterIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckTwitterIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckTwitterIdResponse) ProtoMessage() {}

func (x *CheckTwitterIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckTwitterIdResponse.ProtoReflect.Descriptor instead.
func (*CheckTwitterIdResponse) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{3}
}

func (x *CheckTwitterIdResponse) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

//创建用户
type CreateUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TwitterId   string `protobuf:"bytes,1,opt,name=twitter_id,json=twitterId,proto3" json:"twitter_id,omitempty"`       //推特id
	TwitterCode string `protobuf:"bytes,2,opt,name=twitter_code,json=twitterCode,proto3" json:"twitter_code,omitempty"` //推特code
}

func (x *CreateUserRequest) Reset() {
	*x = CreateUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserRequest) ProtoMessage() {}

func (x *CreateUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserRequest.ProtoReflect.Descriptor instead.
func (*CreateUserRequest) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{4}
}

func (x *CreateUserRequest) GetTwitterId() string {
	if x != nil {
		return x.TwitterId
	}
	return ""
}

func (x *CreateUserRequest) GetTwitterCode() string {
	if x != nil {
		return x.TwitterCode
	}
	return ""
}

type CreateUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` //用户id
}

func (x *CreateUserResponse) Reset() {
	*x = CreateUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserResponse) ProtoMessage() {}

func (x *CreateUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserResponse.ProtoReflect.Descriptor instead.
func (*CreateUserResponse) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{5}
}

func (x *CreateUserResponse) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

//建立邀请关系
type CreateInviteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId   string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`       //用户id
	InviteId string `protobuf:"bytes,2,opt,name=invite_id,json=inviteId,proto3" json:"invite_id,omitempty"` //id
}

func (x *CreateInviteRequest) Reset() {
	*x = CreateInviteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateInviteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateInviteRequest) ProtoMessage() {}

func (x *CreateInviteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateInviteRequest.ProtoReflect.Descriptor instead.
func (*CreateInviteRequest) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{6}
}

func (x *CreateInviteRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *CreateInviteRequest) GetInviteId() string {
	if x != nil {
		return x.InviteId
	}
	return ""
}

type CreateInviteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InvitationId string `protobuf:"bytes,1,opt,name=invitation_id,json=invitationId,proto3" json:"invitation_id,omitempty"` //邀请id
}

func (x *CreateInviteResponse) Reset() {
	*x = CreateInviteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateInviteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateInviteResponse) ProtoMessage() {}

func (x *CreateInviteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateInviteResponse.ProtoReflect.Descriptor instead.
func (*CreateInviteResponse) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{7}
}

func (x *CreateInviteResponse) GetInvitationId() string {
	if x != nil {
		return x.InvitationId
	}
	return ""
}

// 检查今天有没有邀请人(给任务服务提供)
type CheckTodayInviteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` //用户id
}

func (x *CheckTodayInviteRequest) Reset() {
	*x = CheckTodayInviteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckTodayInviteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckTodayInviteRequest) ProtoMessage() {}

func (x *CheckTodayInviteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckTodayInviteRequest.ProtoReflect.Descriptor instead.
func (*CheckTodayInviteRequest) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{8}
}

func (x *CheckTodayInviteRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type CheckTodayInviteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsInvite bool `protobuf:"varint,1,opt,name=is_invite,json=isInvite,proto3" json:"is_invite,omitempty"` //是否邀请
}

func (x *CheckTodayInviteResponse) Reset() {
	*x = CheckTodayInviteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckTodayInviteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckTodayInviteResponse) ProtoMessage() {}

func (x *CheckTodayInviteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckTodayInviteResponse.ProtoReflect.Descriptor instead.
func (*CheckTodayInviteResponse) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{9}
}

func (x *CheckTodayInviteResponse) GetIsInvite() bool {
	if x != nil {
		return x.IsInvite
	}
	return false
}

// 添加用户信息
type AddUserInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId      string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                //用户id
	TwitterName string `protobuf:"bytes,2,opt,name=twitter_name,json=twitterName,proto3" json:"twitter_name,omitempty"` //推特名
	UserName    string `protobuf:"bytes,3,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`          //用户名
	UserAvatar  string `protobuf:"bytes,4,opt,name=user_avatar,json=userAvatar,proto3" json:"user_avatar,omitempty"`    //用户头像
}

func (x *AddUserInfoRequest) Reset() {
	*x = AddUserInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddUserInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddUserInfoRequest) ProtoMessage() {}

func (x *AddUserInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddUserInfoRequest.ProtoReflect.Descriptor instead.
func (*AddUserInfoRequest) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{10}
}

func (x *AddUserInfoRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *AddUserInfoRequest) GetTwitterName() string {
	if x != nil {
		return x.TwitterName
	}
	return ""
}

func (x *AddUserInfoRequest) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *AddUserInfoRequest) GetUserAvatar() string {
	if x != nil {
		return x.UserAvatar
	}
	return ""
}

// 添加用户信息
type AddUserInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsSuccess bool `protobuf:"varint,1,opt,name=is_success,json=isSuccess,proto3" json:"is_success,omitempty"` //是否成功
}

func (x *AddUserInfoResponse) Reset() {
	*x = AddUserInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddUserInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddUserInfoResponse) ProtoMessage() {}

func (x *AddUserInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddUserInfoResponse.ProtoReflect.Descriptor instead.
func (*AddUserInfoResponse) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{11}
}

func (x *AddUserInfoResponse) GetIsSuccess() bool {
	if x != nil {
		return x.IsSuccess
	}
	return false
}

// 查询用户
type QueryUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` //用户id
}

func (x *QueryUserRequest) Reset() {
	*x = QueryUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryUserRequest) ProtoMessage() {}

func (x *QueryUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryUserRequest.ProtoReflect.Descriptor instead.
func (*QueryUserRequest) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{12}
}

func (x *QueryUserRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type QueryUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TwitterName string `protobuf:"bytes,1,opt,name=twitter_name,json=twitterName,proto3" json:"twitter_name,omitempty"` //推特名
	UserName    string `protobuf:"bytes,2,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`          //用户名
	UserAvatar  string `protobuf:"bytes,3,opt,name=user_avatar,json=userAvatar,proto3" json:"user_avatar,omitempty"`    //用户头像
	IsNew       int64  `protobuf:"varint,4,opt,name=is_new,json=isNew,proto3" json:"is_new,omitempty"`                  //是否新用户 1新用户 0老用户
}

func (x *QueryUserResponse) Reset() {
	*x = QueryUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryUserResponse) ProtoMessage() {}

func (x *QueryUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryUserResponse.ProtoReflect.Descriptor instead.
func (*QueryUserResponse) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{13}
}

func (x *QueryUserResponse) GetTwitterName() string {
	if x != nil {
		return x.TwitterName
	}
	return ""
}

func (x *QueryUserResponse) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *QueryUserResponse) GetUserAvatar() string {
	if x != nil {
		return x.UserAvatar
	}
	return ""
}

func (x *QueryUserResponse) GetIsNew() int64 {
	if x != nil {
		return x.IsNew
	}
	return 0
}

// 用户加入黑名单
type AddBlackListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId      int64  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                 //用户id
	BlackUserId string `protobuf:"bytes,2,opt,name=black_user_id,json=blackUserId,proto3" json:"black_user_id,omitempty"` //黑名单用户id
	BanDays     int64  `protobuf:"varint,3,opt,name=ban_days,json=banDays,proto3" json:"ban_days,omitempty"`              //封禁天数
	BanType     int64  `protobuf:"varint,4,opt,name=ban_type,json=banType,proto3" json:"ban_type,omitempty"`              //封禁类型 0:永久封禁 1:临时封禁
}

func (x *AddBlackListRequest) Reset() {
	*x = AddBlackListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddBlackListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddBlackListRequest) ProtoMessage() {}

func (x *AddBlackListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddBlackListRequest.ProtoReflect.Descriptor instead.
func (*AddBlackListRequest) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{14}
}

func (x *AddBlackListRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *AddBlackListRequest) GetBlackUserId() string {
	if x != nil {
		return x.BlackUserId
	}
	return ""
}

func (x *AddBlackListRequest) GetBanDays() int64 {
	if x != nil {
		return x.BanDays
	}
	return 0
}

func (x *AddBlackListRequest) GetBanType() int64 {
	if x != nil {
		return x.BanType
	}
	return 0
}

type AddBlackListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsSuccess bool `protobuf:"varint,1,opt,name=is_success,json=isSuccess,proto3" json:"is_success,omitempty"` //是否成功
}

func (x *AddBlackListResponse) Reset() {
	*x = AddBlackListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddBlackListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddBlackListResponse) ProtoMessage() {}

func (x *AddBlackListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddBlackListResponse.ProtoReflect.Descriptor instead.
func (*AddBlackListResponse) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{15}
}

func (x *AddBlackListResponse) GetIsSuccess() bool {
	if x != nil {
		return x.IsSuccess
	}
	return false
}

// 查询黑名单
type QueryBlackListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` //用户id
}

func (x *QueryBlackListRequest) Reset() {
	*x = QueryBlackListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryBlackListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryBlackListRequest) ProtoMessage() {}

func (x *QueryBlackListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryBlackListRequest.ProtoReflect.Descriptor instead.
func (*QueryBlackListRequest) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{16}
}

func (x *QueryBlackListRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type QueryBlackListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlackUserId int64 `protobuf:"varint,1,opt,name=black_user_id,json=blackUserId,proto3" json:"black_user_id,omitempty"` //黑名单用户id
}

func (x *QueryBlackListResponse) Reset() {
	*x = QueryBlackListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryBlackListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryBlackListResponse) ProtoMessage() {}

func (x *QueryBlackListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryBlackListResponse.ProtoReflect.Descriptor instead.
func (*QueryBlackListResponse) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{17}
}

func (x *QueryBlackListResponse) GetBlackUserId() int64 {
	if x != nil {
		return x.BlackUserId
	}
	return 0
}

// 用户移除黑名单
type RemoveBlackListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId      int64  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                 //用户id
	BlackUserId string `protobuf:"bytes,2,opt,name=black_user_id,json=blackUserId,proto3" json:"black_user_id,omitempty"` //黑名单用户id
}

func (x *RemoveBlackListRequest) Reset() {
	*x = RemoveBlackListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveBlackListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveBlackListRequest) ProtoMessage() {}

func (x *RemoveBlackListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveBlackListRequest.ProtoReflect.Descriptor instead.
func (*RemoveBlackListRequest) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{18}
}

func (x *RemoveBlackListRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *RemoveBlackListRequest) GetBlackUserId() string {
	if x != nil {
		return x.BlackUserId
	}
	return ""
}

type RemoveBlackListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsSuccess bool `protobuf:"varint,1,opt,name=is_success,json=isSuccess,proto3" json:"is_success,omitempty"` //是否成功
}

func (x *RemoveBlackListResponse) Reset() {
	*x = RemoveBlackListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveBlackListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveBlackListResponse) ProtoMessage() {}

func (x *RemoveBlackListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveBlackListResponse.ProtoReflect.Descriptor instead.
func (*RemoveBlackListResponse) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{19}
}

func (x *RemoveBlackListResponse) GetIsSuccess() bool {
	if x != nil {
		return x.IsSuccess
	}
	return false
}

// 添加管理员
type AddAdminRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AdminName   string `protobuf:"bytes,1,opt,name=admin_name,json=adminName,proto3" json:"admin_name,omitempty"`       //管理员名
	AdminPasswd string `protobuf:"bytes,2,opt,name=admin_passwd,json=adminPasswd,proto3" json:"admin_passwd,omitempty"` //管理员密码
}

func (x *AddAdminRequest) Reset() {
	*x = AddAdminRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddAdminRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddAdminRequest) ProtoMessage() {}

func (x *AddAdminRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddAdminRequest.ProtoReflect.Descriptor instead.
func (*AddAdminRequest) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{20}
}

func (x *AddAdminRequest) GetAdminName() string {
	if x != nil {
		return x.AdminName
	}
	return ""
}

func (x *AddAdminRequest) GetAdminPasswd() string {
	if x != nil {
		return x.AdminPasswd
	}
	return ""
}

type AddAdminResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsSuccess bool `protobuf:"varint,1,opt,name=is_success,json=isSuccess,proto3" json:"is_success,omitempty"` //是否成功
}

func (x *AddAdminResponse) Reset() {
	*x = AddAdminResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddAdminResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddAdminResponse) ProtoMessage() {}

func (x *AddAdminResponse) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddAdminResponse.ProtoReflect.Descriptor instead.
func (*AddAdminResponse) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{21}
}

func (x *AddAdminResponse) GetIsSuccess() bool {
	if x != nil {
		return x.IsSuccess
	}
	return false
}

// 管理员登录
type AdminLoginRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AdminName   string `protobuf:"bytes,1,opt,name=admin_name,json=adminName,proto3" json:"admin_name,omitempty"`       //管理员名
	AdminPasswd string `protobuf:"bytes,2,opt,name=admin_passwd,json=adminPasswd,proto3" json:"admin_passwd,omitempty"` //管理员密码
}

func (x *AdminLoginRequest) Reset() {
	*x = AdminLoginRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminLoginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminLoginRequest) ProtoMessage() {}

func (x *AdminLoginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminLoginRequest.ProtoReflect.Descriptor instead.
func (*AdminLoginRequest) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{22}
}

func (x *AdminLoginRequest) GetAdminName() string {
	if x != nil {
		return x.AdminName
	}
	return ""
}

func (x *AdminLoginRequest) GetAdminPasswd() string {
	if x != nil {
		return x.AdminPasswd
	}
	return ""
}

type AdminLoginResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AdminUserId int64 `protobuf:"varint,1,opt,name=admin_user_id,json=adminUserId,proto3" json:"admin_user_id,omitempty"` //管理员id
}

func (x *AdminLoginResponse) Reset() {
	*x = AdminLoginResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdminLoginResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminLoginResponse) ProtoMessage() {}

func (x *AdminLoginResponse) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminLoginResponse.ProtoReflect.Descriptor instead.
func (*AdminLoginResponse) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{23}
}

func (x *AdminLoginResponse) GetAdminUserId() int64 {
	if x != nil {
		return x.AdminUserId
	}
	return 0
}

// 删除管理员
type RemoveAdminRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AdminUserId int64 `protobuf:"varint,1,opt,name=admin_user_id,json=adminUserId,proto3" json:"admin_user_id,omitempty"` //管理员id
}

func (x *RemoveAdminRequest) Reset() {
	*x = RemoveAdminRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveAdminRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveAdminRequest) ProtoMessage() {}

func (x *RemoveAdminRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveAdminRequest.ProtoReflect.Descriptor instead.
func (*RemoveAdminRequest) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{24}
}

func (x *RemoveAdminRequest) GetAdminUserId() int64 {
	if x != nil {
		return x.AdminUserId
	}
	return 0
}

// 删除管理员
type RemoveAdminResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsSuccess bool `protobuf:"varint,1,opt,name=is_success,json=isSuccess,proto3" json:"is_success,omitempty"` //是否成功
}

func (x *RemoveAdminResponse) Reset() {
	*x = RemoveAdminResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveAdminResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveAdminResponse) ProtoMessage() {}

func (x *RemoveAdminResponse) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveAdminResponse.ProtoReflect.Descriptor instead.
func (*RemoveAdminResponse) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{25}
}

func (x *RemoveAdminResponse) GetIsSuccess() bool {
	if x != nil {
		return x.IsSuccess
	}
	return false
}

// 获取帮助分类
type GetHelpCategoriesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CategoryStatus int64 `protobuf:"varint,1,opt,name=categoryStatus,proto3" json:"categoryStatus,omitempty"` //分类状态 # 0 上架 1 下架 2 全部
}

func (x *GetHelpCategoriesRequest) Reset() {
	*x = GetHelpCategoriesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHelpCategoriesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHelpCategoriesRequest) ProtoMessage() {}

func (x *GetHelpCategoriesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHelpCategoriesRequest.ProtoReflect.Descriptor instead.
func (*GetHelpCategoriesRequest) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{26}
}

func (x *GetHelpCategoriesRequest) GetCategoryStatus() int64 {
	if x != nil {
		return x.CategoryStatus
	}
	return 0
}

// 获取帮助分类数组
type HelpCategory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HelpCategoryId int64 `protobuf:"varint,1,opt,name=helpCategoryId,proto3" json:"helpCategoryId,omitempty"` //帮助分类id
	CreatedAt      int64 `protobuf:"varint,2,opt,name=createdAt,proto3" json:"createdAt,omitempty"`           //创建时间戳
	CategoryStatus int64 `protobuf:"varint,3,opt,name=categoryStatus,proto3" json:"categoryStatus,omitempty"` //分类状态 # 0:上架 1:下架
}

func (x *HelpCategory) Reset() {
	*x = HelpCategory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HelpCategory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HelpCategory) ProtoMessage() {}

func (x *HelpCategory) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HelpCategory.ProtoReflect.Descriptor instead.
func (*HelpCategory) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{27}
}

func (x *HelpCategory) GetHelpCategoryId() int64 {
	if x != nil {
		return x.HelpCategoryId
	}
	return 0
}

func (x *HelpCategory) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *HelpCategory) GetCategoryStatus() int64 {
	if x != nil {
		return x.CategoryStatus
	}
	return 0
}

// 获取帮助分类
type GetHelpCategoriesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HelpCategories []*HelpCategory `protobuf:"bytes,1,rep,name=help_categories,json=helpCategories,proto3" json:"help_categories,omitempty"` //帮助分类
}

func (x *GetHelpCategoriesResponse) Reset() {
	*x = GetHelpCategoriesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHelpCategoriesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHelpCategoriesResponse) ProtoMessage() {}

func (x *GetHelpCategoriesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHelpCategoriesResponse.ProtoReflect.Descriptor instead.
func (*GetHelpCategoriesResponse) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{28}
}

func (x *GetHelpCategoriesResponse) GetHelpCategories() []*HelpCategory {
	if x != nil {
		return x.HelpCategories
	}
	return nil
}

// 创建帮助分类
type CreateHelpCategoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreatedAt      int64 `protobuf:"varint,1,opt,name=createdAt,proto3" json:"createdAt,omitempty"`           //创建时间戳
	CategoryStatus int64 `protobuf:"varint,2,opt,name=categoryStatus,proto3" json:"categoryStatus,omitempty"` //分类状态 # 0:上架 1:下架
}

func (x *CreateHelpCategoryRequest) Reset() {
	*x = CreateHelpCategoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateHelpCategoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateHelpCategoryRequest) ProtoMessage() {}

func (x *CreateHelpCategoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateHelpCategoryRequest.ProtoReflect.Descriptor instead.
func (*CreateHelpCategoryRequest) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{29}
}

func (x *CreateHelpCategoryRequest) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *CreateHelpCategoryRequest) GetCategoryStatus() int64 {
	if x != nil {
		return x.CategoryStatus
	}
	return 0
}

type CreateHelpCategoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HelpCategoryId string `protobuf:"bytes,1,opt,name=helpCategoryId,proto3" json:"helpCategoryId,omitempty"` //帮助分类id
}

func (x *CreateHelpCategoryResponse) Reset() {
	*x = CreateHelpCategoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateHelpCategoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateHelpCategoryResponse) ProtoMessage() {}

func (x *CreateHelpCategoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateHelpCategoryResponse.ProtoReflect.Descriptor instead.
func (*CreateHelpCategoryResponse) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{30}
}

func (x *CreateHelpCategoryResponse) GetHelpCategoryId() string {
	if x != nil {
		return x.HelpCategoryId
	}
	return ""
}

// 删除帮助分类
type DeleteHelpCategoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HelpCategoryId int64 `protobuf:"varint,1,opt,name=helpCategoryId,proto3" json:"helpCategoryId,omitempty"` //帮助分类id
}

func (x *DeleteHelpCategoryRequest) Reset() {
	*x = DeleteHelpCategoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteHelpCategoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteHelpCategoryRequest) ProtoMessage() {}

func (x *DeleteHelpCategoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteHelpCategoryRequest.ProtoReflect.Descriptor instead.
func (*DeleteHelpCategoryRequest) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{31}
}

func (x *DeleteHelpCategoryRequest) GetHelpCategoryId() int64 {
	if x != nil {
		return x.HelpCategoryId
	}
	return 0
}

type DeleteHelpCategoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsSuccess bool `protobuf:"varint,1,opt,name=is_success,json=isSuccess,proto3" json:"is_success,omitempty"` //是否成功
}

func (x *DeleteHelpCategoryResponse) Reset() {
	*x = DeleteHelpCategoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteHelpCategoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteHelpCategoryResponse) ProtoMessage() {}

func (x *DeleteHelpCategoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteHelpCategoryResponse.ProtoReflect.Descriptor instead.
func (*DeleteHelpCategoryResponse) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{32}
}

func (x *DeleteHelpCategoryResponse) GetIsSuccess() bool {
	if x != nil {
		return x.IsSuccess
	}
	return false
}

//  编辑帮助分类
type EditHelpCategoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HelpCategoryId int64 `protobuf:"varint,1,opt,name=helpCategoryId,proto3" json:"helpCategoryId,omitempty"` //帮助分类id
	CategoryStatus int64 `protobuf:"varint,2,opt,name=categoryStatus,proto3" json:"categoryStatus,omitempty"` //分类状态 # 0:上架 1:下架
}

func (x *EditHelpCategoryRequest) Reset() {
	*x = EditHelpCategoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EditHelpCategoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditHelpCategoryRequest) ProtoMessage() {}

func (x *EditHelpCategoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditHelpCategoryRequest.ProtoReflect.Descriptor instead.
func (*EditHelpCategoryRequest) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{33}
}

func (x *EditHelpCategoryRequest) GetHelpCategoryId() int64 {
	if x != nil {
		return x.HelpCategoryId
	}
	return 0
}

func (x *EditHelpCategoryRequest) GetCategoryStatus() int64 {
	if x != nil {
		return x.CategoryStatus
	}
	return 0
}

type EditHelpCategoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsSuccess bool `protobuf:"varint,1,opt,name=is_success,json=isSuccess,proto3" json:"is_success,omitempty"` //是否成功
}

func (x *EditHelpCategoryResponse) Reset() {
	*x = EditHelpCategoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EditHelpCategoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditHelpCategoryResponse) ProtoMessage() {}

func (x *EditHelpCategoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditHelpCategoryResponse.ProtoReflect.Descriptor instead.
func (*EditHelpCategoryResponse) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{34}
}

func (x *EditHelpCategoryResponse) GetIsSuccess() bool {
	if x != nil {
		return x.IsSuccess
	}
	return false
}

// 新建帮助分类翻译
type CreateHelpCategoryTranslationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HelpCategoryId int64  `protobuf:"varint,1,opt,name=helpCategoryId,proto3" json:"helpCategoryId,omitempty"` //帮助分类id
	Language       string `protobuf:"bytes,2,opt,name=language,proto3" json:"language,omitempty"`              //语言
	CategoryName   string `protobuf:"bytes,3,opt,name=categoryName,proto3" json:"categoryName,omitempty"`      //分类名称
}

func (x *CreateHelpCategoryTranslationRequest) Reset() {
	*x = CreateHelpCategoryTranslationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateHelpCategoryTranslationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateHelpCategoryTranslationRequest) ProtoMessage() {}

func (x *CreateHelpCategoryTranslationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateHelpCategoryTranslationRequest.ProtoReflect.Descriptor instead.
func (*CreateHelpCategoryTranslationRequest) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{35}
}

func (x *CreateHelpCategoryTranslationRequest) GetHelpCategoryId() int64 {
	if x != nil {
		return x.HelpCategoryId
	}
	return 0
}

func (x *CreateHelpCategoryTranslationRequest) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *CreateHelpCategoryTranslationRequest) GetCategoryName() string {
	if x != nil {
		return x.CategoryName
	}
	return ""
}

type CreateHelpCategoryTranslationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsSuccess bool `protobuf:"varint,1,opt,name=is_success,json=isSuccess,proto3" json:"is_success,omitempty"` //是否成功
}

func (x *CreateHelpCategoryTranslationResponse) Reset() {
	*x = CreateHelpCategoryTranslationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateHelpCategoryTranslationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateHelpCategoryTranslationResponse) ProtoMessage() {}

func (x *CreateHelpCategoryTranslationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateHelpCategoryTranslationResponse.ProtoReflect.Descriptor instead.
func (*CreateHelpCategoryTranslationResponse) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{36}
}

func (x *CreateHelpCategoryTranslationResponse) GetIsSuccess() bool {
	if x != nil {
		return x.IsSuccess
	}
	return false
}

// 删除帮助分类翻译
type DeleteHelpCategoryTranslationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HelpCategoryId int64  `protobuf:"varint,1,opt,name=helpCategoryId,proto3" json:"helpCategoryId,omitempty"` //帮助分类id
	Language       string `protobuf:"bytes,2,opt,name=language,proto3" json:"language,omitempty"`              //语言
}

func (x *DeleteHelpCategoryTranslationRequest) Reset() {
	*x = DeleteHelpCategoryTranslationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteHelpCategoryTranslationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteHelpCategoryTranslationRequest) ProtoMessage() {}

func (x *DeleteHelpCategoryTranslationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteHelpCategoryTranslationRequest.ProtoReflect.Descriptor instead.
func (*DeleteHelpCategoryTranslationRequest) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{37}
}

func (x *DeleteHelpCategoryTranslationRequest) GetHelpCategoryId() int64 {
	if x != nil {
		return x.HelpCategoryId
	}
	return 0
}

func (x *DeleteHelpCategoryTranslationRequest) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

type DeleteHelpCategoryTranslationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsSuccess bool `protobuf:"varint,1,opt,name=is_success,json=isSuccess,proto3" json:"is_success,omitempty"` //是否成功
}

func (x *DeleteHelpCategoryTranslationResponse) Reset() {
	*x = DeleteHelpCategoryTranslationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteHelpCategoryTranslationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteHelpCategoryTranslationResponse) ProtoMessage() {}

func (x *DeleteHelpCategoryTranslationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteHelpCategoryTranslationResponse.ProtoReflect.Descriptor instead.
func (*DeleteHelpCategoryTranslationResponse) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{38}
}

func (x *DeleteHelpCategoryTranslationResponse) GetIsSuccess() bool {
	if x != nil {
		return x.IsSuccess
	}
	return false
}

// 获取帮助分类翻译
type GetHelpCategoryTranslationsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HelpCategoryId int64  `protobuf:"varint,1,opt,name=helpCategoryId,proto3" json:"helpCategoryId,omitempty"` //帮助分类id
	Language       string `protobuf:"bytes,2,opt,name=language,proto3" json:"language,omitempty"`              //语言
}

func (x *GetHelpCategoryTranslationsRequest) Reset() {
	*x = GetHelpCategoryTranslationsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHelpCategoryTranslationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHelpCategoryTranslationsRequest) ProtoMessage() {}

func (x *GetHelpCategoryTranslationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHelpCategoryTranslationsRequest.ProtoReflect.Descriptor instead.
func (*GetHelpCategoryTranslationsRequest) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{39}
}

func (x *GetHelpCategoryTranslationsRequest) GetHelpCategoryId() int64 {
	if x != nil {
		return x.HelpCategoryId
	}
	return 0
}

func (x *GetHelpCategoryTranslationsRequest) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

type GetHelpCategoryTranslationsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HelpCategoryId int64  `protobuf:"varint,1,opt,name=helpCategoryId,proto3" json:"helpCategoryId,omitempty"` //帮助分类id
	Language       string `protobuf:"bytes,2,opt,name=language,proto3" json:"language,omitempty"`              //语言
	CategoryName   string `protobuf:"bytes,3,opt,name=categoryName,proto3" json:"categoryName,omitempty"`      //分类名称
}

func (x *GetHelpCategoryTranslationsResponse) Reset() {
	*x = GetHelpCategoryTranslationsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHelpCategoryTranslationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHelpCategoryTranslationsResponse) ProtoMessage() {}

func (x *GetHelpCategoryTranslationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHelpCategoryTranslationsResponse.ProtoReflect.Descriptor instead.
func (*GetHelpCategoryTranslationsResponse) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{40}
}

func (x *GetHelpCategoryTranslationsResponse) GetHelpCategoryId() int64 {
	if x != nil {
		return x.HelpCategoryId
	}
	return 0
}

func (x *GetHelpCategoryTranslationsResponse) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *GetHelpCategoryTranslationsResponse) GetCategoryName() string {
	if x != nil {
		return x.CategoryName
	}
	return ""
}

// 获取消息通知
type GetNotificationsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NoticeTime   string `protobuf:"bytes,1,opt,name=noticeTime,proto3" json:"noticeTime,omitempty"`      //通知时间
	NoticeNumber int64  `protobuf:"varint,2,opt,name=noticeNumber,proto3" json:"noticeNumber,omitempty"` // 消息数量
	NoticeType   int64  `protobuf:"varint,3,opt,name=noticeType,proto3" json:"noticeType,omitempty"`     // 消息类型 0:系统通知 1:用户通知
}

func (x *GetNotificationsRequest) Reset() {
	*x = GetNotificationsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNotificationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNotificationsRequest) ProtoMessage() {}

func (x *GetNotificationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNotificationsRequest.ProtoReflect.Descriptor instead.
func (*GetNotificationsRequest) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{41}
}

func (x *GetNotificationsRequest) GetNoticeTime() string {
	if x != nil {
		return x.NoticeTime
	}
	return ""
}

func (x *GetNotificationsRequest) GetNoticeNumber() int64 {
	if x != nil {
		return x.NoticeNumber
	}
	return 0
}

func (x *GetNotificationsRequest) GetNoticeType() int64 {
	if x != nil {
		return x.NoticeType
	}
	return 0
}

type GetNotificationsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Notifications []*Notification `protobuf:"bytes,1,rep,name=notifications,proto3" json:"notifications,omitempty"` //通知
}

func (x *GetNotificationsResponse) Reset() {
	*x = GetNotificationsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNotificationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNotificationsResponse) ProtoMessage() {}

func (x *GetNotificationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNotificationsResponse.ProtoReflect.Descriptor instead.
func (*GetNotificationsResponse) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{42}
}

func (x *GetNotificationsResponse) GetNotifications() []*Notification {
	if x != nil {
		return x.Notifications
	}
	return nil
}

type Notification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NoticeTitle    string `protobuf:"bytes,1,opt,name=noticeTitle,proto3" json:"noticeTitle,omitempty"`       //通知标题
	NoticeContent  string `protobuf:"bytes,2,opt,name=noticeContent,proto3" json:"noticeContent,omitempty"`   // 通知内容
	NoticeTime     string `protobuf:"bytes,3,opt,name=noticeTime,proto3" json:"noticeTime,omitempty"`         // 通知时间
	NoticeType     int64  `protobuf:"varint,4,opt,name=noticeType,proto3" json:"noticeType,omitempty"`        // 消息类型 是否已读 0:未读 1:已读
	SystemNoticeId string `protobuf:"bytes,5,opt,name=systemNoticeId,proto3" json:"systemNoticeId,omitempty"` // 系统通知id
}

func (x *Notification) Reset() {
	*x = Notification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Notification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Notification) ProtoMessage() {}

func (x *Notification) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Notification.ProtoReflect.Descriptor instead.
func (*Notification) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{43}
}

func (x *Notification) GetNoticeTitle() string {
	if x != nil {
		return x.NoticeTitle
	}
	return ""
}

func (x *Notification) GetNoticeContent() string {
	if x != nil {
		return x.NoticeContent
	}
	return ""
}

func (x *Notification) GetNoticeTime() string {
	if x != nil {
		return x.NoticeTime
	}
	return ""
}

func (x *Notification) GetNoticeType() int64 {
	if x != nil {
		return x.NoticeType
	}
	return 0
}

func (x *Notification) GetSystemNoticeId() string {
	if x != nil {
		return x.SystemNoticeId
	}
	return ""
}

// 新建帮助文档
type CreateHelpDocumentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HelpCategoryId int64 `protobuf:"varint,1,opt,name=helpCategoryId,proto3" json:"helpCategoryId,omitempty"` //帮助分类id
	DocumentStatus int64 `protobuf:"varint,2,opt,name=documentStatus,proto3" json:"documentStatus,omitempty"` //文档状态 # 0:上架 1:下架
}

func (x *CreateHelpDocumentRequest) Reset() {
	*x = CreateHelpDocumentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateHelpDocumentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateHelpDocumentRequest) ProtoMessage() {}

func (x *CreateHelpDocumentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateHelpDocumentRequest.ProtoReflect.Descriptor instead.
func (*CreateHelpDocumentRequest) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{44}
}

func (x *CreateHelpDocumentRequest) GetHelpCategoryId() int64 {
	if x != nil {
		return x.HelpCategoryId
	}
	return 0
}

func (x *CreateHelpDocumentRequest) GetDocumentStatus() int64 {
	if x != nil {
		return x.DocumentStatus
	}
	return 0
}

type CreateHelpDocumentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HelpDocumentId int64 `protobuf:"varint,1,opt,name=helpDocumentId,proto3" json:"helpDocumentId,omitempty"` //帮助文档id
}

func (x *CreateHelpDocumentResponse) Reset() {
	*x = CreateHelpDocumentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateHelpDocumentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateHelpDocumentResponse) ProtoMessage() {}

func (x *CreateHelpDocumentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateHelpDocumentResponse.ProtoReflect.Descriptor instead.
func (*CreateHelpDocumentResponse) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{45}
}

func (x *CreateHelpDocumentResponse) GetHelpDocumentId() int64 {
	if x != nil {
		return x.HelpDocumentId
	}
	return 0
}

// 删除帮助文档
type DeleteHelpDocumentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HelpDocumentId int64 `protobuf:"varint,1,opt,name=helpDocumentId,proto3" json:"helpDocumentId,omitempty"` //帮助文档id
}

func (x *DeleteHelpDocumentRequest) Reset() {
	*x = DeleteHelpDocumentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteHelpDocumentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteHelpDocumentRequest) ProtoMessage() {}

func (x *DeleteHelpDocumentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteHelpDocumentRequest.ProtoReflect.Descriptor instead.
func (*DeleteHelpDocumentRequest) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{46}
}

func (x *DeleteHelpDocumentRequest) GetHelpDocumentId() int64 {
	if x != nil {
		return x.HelpDocumentId
	}
	return 0
}

type DeleteHelpDocumentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsSuccess bool `protobuf:"varint,1,opt,name=is_success,json=isSuccess,proto3" json:"is_success,omitempty"` //是否成功
}

func (x *DeleteHelpDocumentResponse) Reset() {
	*x = DeleteHelpDocumentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteHelpDocumentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteHelpDocumentResponse) ProtoMessage() {}

func (x *DeleteHelpDocumentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteHelpDocumentResponse.ProtoReflect.Descriptor instead.
func (*DeleteHelpDocumentResponse) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{47}
}

func (x *DeleteHelpDocumentResponse) GetIsSuccess() bool {
	if x != nil {
		return x.IsSuccess
	}
	return false
}

// 编辑帮助文档
type EditHelpDocumentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HelpDocumentId int64 `protobuf:"varint,1,opt,name=helpDocumentId,proto3" json:"helpDocumentId,omitempty"` //帮助文档id
	DocumentStatus int64 `protobuf:"varint,2,opt,name=documentStatus,proto3" json:"documentStatus,omitempty"` //文档状态 # 0:上架 1:下架
}

func (x *EditHelpDocumentRequest) Reset() {
	*x = EditHelpDocumentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EditHelpDocumentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditHelpDocumentRequest) ProtoMessage() {}

func (x *EditHelpDocumentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditHelpDocumentRequest.ProtoReflect.Descriptor instead.
func (*EditHelpDocumentRequest) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{48}
}

func (x *EditHelpDocumentRequest) GetHelpDocumentId() int64 {
	if x != nil {
		return x.HelpDocumentId
	}
	return 0
}

func (x *EditHelpDocumentRequest) GetDocumentStatus() int64 {
	if x != nil {
		return x.DocumentStatus
	}
	return 0
}

type EditHelpDocumentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsSuccess bool `protobuf:"varint,1,opt,name=is_success,json=isSuccess,proto3" json:"is_success,omitempty"` //是否成功
}

func (x *EditHelpDocumentResponse) Reset() {
	*x = EditHelpDocumentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EditHelpDocumentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditHelpDocumentResponse) ProtoMessage() {}

func (x *EditHelpDocumentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditHelpDocumentResponse.ProtoReflect.Descriptor instead.
func (*EditHelpDocumentResponse) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{49}
}

func (x *EditHelpDocumentResponse) GetIsSuccess() bool {
	if x != nil {
		return x.IsSuccess
	}
	return false
}

// 新建帮助文档翻译
type CreateHelpDocumentTranslationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HelpDocumentId  int64  `protobuf:"varint,1,opt,name=helpDocumentId,proto3" json:"helpDocumentId,omitempty"`  //帮助文档id
	Language        string `protobuf:"bytes,2,opt,name=language,proto3" json:"language,omitempty"`               //语言
	DocumentTitle   string `protobuf:"bytes,3,opt,name=documentTitle,proto3" json:"documentTitle,omitempty"`     //文档标题
	DocumentContent string `protobuf:"bytes,4,opt,name=documentContent,proto3" json:"documentContent,omitempty"` //文档内容
}

func (x *CreateHelpDocumentTranslationRequest) Reset() {
	*x = CreateHelpDocumentTranslationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateHelpDocumentTranslationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateHelpDocumentTranslationRequest) ProtoMessage() {}

func (x *CreateHelpDocumentTranslationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateHelpDocumentTranslationRequest.ProtoReflect.Descriptor instead.
func (*CreateHelpDocumentTranslationRequest) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{50}
}

func (x *CreateHelpDocumentTranslationRequest) GetHelpDocumentId() int64 {
	if x != nil {
		return x.HelpDocumentId
	}
	return 0
}

func (x *CreateHelpDocumentTranslationRequest) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *CreateHelpDocumentTranslationRequest) GetDocumentTitle() string {
	if x != nil {
		return x.DocumentTitle
	}
	return ""
}

func (x *CreateHelpDocumentTranslationRequest) GetDocumentContent() string {
	if x != nil {
		return x.DocumentContent
	}
	return ""
}

type CreateHelpDocumentTranslationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsSuccess bool `protobuf:"varint,1,opt,name=is_success,json=isSuccess,proto3" json:"is_success,omitempty"` //是否成功
}

func (x *CreateHelpDocumentTranslationResponse) Reset() {
	*x = CreateHelpDocumentTranslationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateHelpDocumentTranslationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateHelpDocumentTranslationResponse) ProtoMessage() {}

func (x *CreateHelpDocumentTranslationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateHelpDocumentTranslationResponse.ProtoReflect.Descriptor instead.
func (*CreateHelpDocumentTranslationResponse) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{51}
}

func (x *CreateHelpDocumentTranslationResponse) GetIsSuccess() bool {
	if x != nil {
		return x.IsSuccess
	}
	return false
}

// 删除帮助文档翻译
type DeleteHelpDocumentTranslationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HelpDocumentId int64  `protobuf:"varint,1,opt,name=helpDocumentId,proto3" json:"helpDocumentId,omitempty"` //帮助文档id
	Language       string `protobuf:"bytes,2,opt,name=language,proto3" json:"language,omitempty"`              //语言
}

func (x *DeleteHelpDocumentTranslationRequest) Reset() {
	*x = DeleteHelpDocumentTranslationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteHelpDocumentTranslationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteHelpDocumentTranslationRequest) ProtoMessage() {}

func (x *DeleteHelpDocumentTranslationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteHelpDocumentTranslationRequest.ProtoReflect.Descriptor instead.
func (*DeleteHelpDocumentTranslationRequest) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{52}
}

func (x *DeleteHelpDocumentTranslationRequest) GetHelpDocumentId() int64 {
	if x != nil {
		return x.HelpDocumentId
	}
	return 0
}

func (x *DeleteHelpDocumentTranslationRequest) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

type DeleteHelpDocumentTranslationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsSuccess bool `protobuf:"varint,1,opt,name=is_success,json=isSuccess,proto3" json:"is_success,omitempty"` //是否成功
}

func (x *DeleteHelpDocumentTranslationResponse) Reset() {
	*x = DeleteHelpDocumentTranslationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteHelpDocumentTranslationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteHelpDocumentTranslationResponse) ProtoMessage() {}

func (x *DeleteHelpDocumentTranslationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteHelpDocumentTranslationResponse.ProtoReflect.Descriptor instead.
func (*DeleteHelpDocumentTranslationResponse) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{53}
}

func (x *DeleteHelpDocumentTranslationResponse) GetIsSuccess() bool {
	if x != nil {
		return x.IsSuccess
	}
	return false
}

// 获取帮助文档翻译
type GetHelpDocumentTranslationsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HelpDocumentId int64  `protobuf:"varint,1,opt,name=helpDocumentId,proto3" json:"helpDocumentId,omitempty"` //帮助文档id
	Language       string `protobuf:"bytes,2,opt,name=language,proto3" json:"language,omitempty"`              //语言
}

func (x *GetHelpDocumentTranslationsRequest) Reset() {
	*x = GetHelpDocumentTranslationsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHelpDocumentTranslationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHelpDocumentTranslationsRequest) ProtoMessage() {}

func (x *GetHelpDocumentTranslationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHelpDocumentTranslationsRequest.ProtoReflect.Descriptor instead.
func (*GetHelpDocumentTranslationsRequest) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{54}
}

func (x *GetHelpDocumentTranslationsRequest) GetHelpDocumentId() int64 {
	if x != nil {
		return x.HelpDocumentId
	}
	return 0
}

func (x *GetHelpDocumentTranslationsRequest) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

type GetHelpDocumentTranslationsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HelpDocumentId  int64  `protobuf:"varint,1,opt,name=helpDocumentId,proto3" json:"helpDocumentId,omitempty"`  //帮助文档id
	Language        string `protobuf:"bytes,2,opt,name=language,proto3" json:"language,omitempty"`               //语言
	DocumentTitle   string `protobuf:"bytes,3,opt,name=documentTitle,proto3" json:"documentTitle,omitempty"`     //文档标题
	DocumentContent string `protobuf:"bytes,4,opt,name=documentContent,proto3" json:"documentContent,omitempty"` //文档内容
}

func (x *GetHelpDocumentTranslationsResponse) Reset() {
	*x = GetHelpDocumentTranslationsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHelpDocumentTranslationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHelpDocumentTranslationsResponse) ProtoMessage() {}

func (x *GetHelpDocumentTranslationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHelpDocumentTranslationsResponse.ProtoReflect.Descriptor instead.
func (*GetHelpDocumentTranslationsResponse) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{55}
}

func (x *GetHelpDocumentTranslationsResponse) GetHelpDocumentId() int64 {
	if x != nil {
		return x.HelpDocumentId
	}
	return 0
}

func (x *GetHelpDocumentTranslationsResponse) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *GetHelpDocumentTranslationsResponse) GetDocumentTitle() string {
	if x != nil {
		return x.DocumentTitle
	}
	return ""
}

func (x *GetHelpDocumentTranslationsResponse) GetDocumentContent() string {
	if x != nil {
		return x.DocumentContent
	}
	return ""
}

// 获取帮助文档
type GetHelpDocumentsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HelpCategoryId int64 `protobuf:"varint,1,opt,name=helpCategoryId,proto3" json:"helpCategoryId,omitempty"` //帮助分类id
	DocumentStatus int64 `protobuf:"varint,2,opt,name=documentStatus,proto3" json:"documentStatus,omitempty"` //文档状态 # 0:上架 1:下架
}

func (x *GetHelpDocumentsRequest) Reset() {
	*x = GetHelpDocumentsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHelpDocumentsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHelpDocumentsRequest) ProtoMessage() {}

func (x *GetHelpDocumentsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHelpDocumentsRequest.ProtoReflect.Descriptor instead.
func (*GetHelpDocumentsRequest) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{56}
}

func (x *GetHelpDocumentsRequest) GetHelpCategoryId() int64 {
	if x != nil {
		return x.HelpCategoryId
	}
	return 0
}

func (x *GetHelpDocumentsRequest) GetDocumentStatus() int64 {
	if x != nil {
		return x.DocumentStatus
	}
	return 0
}

type GetHelpDocumentsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HelpDocuments []*HelpDocument `protobuf:"bytes,1,rep,name=helpDocuments,proto3" json:"helpDocuments,omitempty"` //帮助文档
}

func (x *GetHelpDocumentsResponse) Reset() {
	*x = GetHelpDocumentsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHelpDocumentsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHelpDocumentsResponse) ProtoMessage() {}

func (x *GetHelpDocumentsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHelpDocumentsResponse.ProtoReflect.Descriptor instead.
func (*GetHelpDocumentsResponse) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{57}
}

func (x *GetHelpDocumentsResponse) GetHelpDocuments() []*HelpDocument {
	if x != nil {
		return x.HelpDocuments
	}
	return nil
}

type HelpDocument struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HelpDocumentId int64 `protobuf:"varint,1,opt,name=helpDocumentId,proto3" json:"helpDocumentId,omitempty"` //帮助文档id
	HelpCategoryId int64 `protobuf:"varint,2,opt,name=helpCategoryId,proto3" json:"helpCategoryId,omitempty"` //帮助分类id
	DocumentStatus int64 `protobuf:"varint,3,opt,name=documentStatus,proto3" json:"documentStatus,omitempty"` //文档状态 # 0:上架 1:下架
}

func (x *HelpDocument) Reset() {
	*x = HelpDocument{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HelpDocument) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HelpDocument) ProtoMessage() {}

func (x *HelpDocument) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HelpDocument.ProtoReflect.Descriptor instead.
func (*HelpDocument) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{58}
}

func (x *HelpDocument) GetHelpDocumentId() int64 {
	if x != nil {
		return x.HelpDocumentId
	}
	return 0
}

func (x *HelpDocument) GetHelpCategoryId() int64 {
	if x != nil {
		return x.HelpCategoryId
	}
	return 0
}

func (x *HelpDocument) GetDocumentStatus() int64 {
	if x != nil {
		return x.DocumentStatus
	}
	return 0
}

// 编辑帮助文档翻译
type EditHelpDocumentTranslationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HelpDocumentId  int64  `protobuf:"varint,1,opt,name=helpDocumentId,proto3" json:"helpDocumentId,omitempty"`  //帮助文档id
	Language        string `protobuf:"bytes,2,opt,name=language,proto3" json:"language,omitempty"`               //语言
	DocumentTitle   string `protobuf:"bytes,3,opt,name=documentTitle,proto3" json:"documentTitle,omitempty"`     //文档标题
	DocumentContent string `protobuf:"bytes,4,opt,name=documentContent,proto3" json:"documentContent,omitempty"` //文档内容
}

func (x *EditHelpDocumentTranslationRequest) Reset() {
	*x = EditHelpDocumentTranslationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EditHelpDocumentTranslationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditHelpDocumentTranslationRequest) ProtoMessage() {}

func (x *EditHelpDocumentTranslationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditHelpDocumentTranslationRequest.ProtoReflect.Descriptor instead.
func (*EditHelpDocumentTranslationRequest) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{59}
}

func (x *EditHelpDocumentTranslationRequest) GetHelpDocumentId() int64 {
	if x != nil {
		return x.HelpDocumentId
	}
	return 0
}

func (x *EditHelpDocumentTranslationRequest) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *EditHelpDocumentTranslationRequest) GetDocumentTitle() string {
	if x != nil {
		return x.DocumentTitle
	}
	return ""
}

func (x *EditHelpDocumentTranslationRequest) GetDocumentContent() string {
	if x != nil {
		return x.DocumentContent
	}
	return ""
}

type EditHelpDocumentTranslationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsSuccess bool `protobuf:"varint,1,opt,name=is_success,json=isSuccess,proto3" json:"is_success,omitempty"` //是否成功
}

func (x *EditHelpDocumentTranslationResponse) Reset() {
	*x = EditHelpDocumentTranslationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EditHelpDocumentTranslationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditHelpDocumentTranslationResponse) ProtoMessage() {}

func (x *EditHelpDocumentTranslationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditHelpDocumentTranslationResponse.ProtoReflect.Descriptor instead.
func (*EditHelpDocumentTranslationResponse) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{60}
}

func (x *EditHelpDocumentTranslationResponse) GetIsSuccess() bool {
	if x != nil {
		return x.IsSuccess
	}
	return false
}

// 编辑帮助分类翻译
type EditHelpCategoryTranslationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HelpCategoryId int64  `protobuf:"varint,1,opt,name=helpCategoryId,proto3" json:"helpCategoryId,omitempty"` //帮助分类id
	Language       string `protobuf:"bytes,2,opt,name=language,proto3" json:"language,omitempty"`              //语言
	CategoryName   string `protobuf:"bytes,3,opt,name=categoryName,proto3" json:"categoryName,omitempty"`      //分类名称
}

func (x *EditHelpCategoryTranslationRequest) Reset() {
	*x = EditHelpCategoryTranslationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EditHelpCategoryTranslationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditHelpCategoryTranslationRequest) ProtoMessage() {}

func (x *EditHelpCategoryTranslationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditHelpCategoryTranslationRequest.ProtoReflect.Descriptor instead.
func (*EditHelpCategoryTranslationRequest) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{61}
}

func (x *EditHelpCategoryTranslationRequest) GetHelpCategoryId() int64 {
	if x != nil {
		return x.HelpCategoryId
	}
	return 0
}

func (x *EditHelpCategoryTranslationRequest) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *EditHelpCategoryTranslationRequest) GetCategoryName() string {
	if x != nil {
		return x.CategoryName
	}
	return ""
}

type EditHelpCategoryTranslationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsSuccess bool `protobuf:"varint,1,opt,name=is_success,json=isSuccess,proto3" json:"is_success,omitempty"` //是否成功
}

func (x *EditHelpCategoryTranslationResponse) Reset() {
	*x = EditHelpCategoryTranslationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EditHelpCategoryTranslationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditHelpCategoryTranslationResponse) ProtoMessage() {}

func (x *EditHelpCategoryTranslationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditHelpCategoryTranslationResponse.ProtoReflect.Descriptor instead.
func (*EditHelpCategoryTranslationResponse) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{62}
}

func (x *EditHelpCategoryTranslationResponse) GetIsSuccess() bool {
	if x != nil {
		return x.IsSuccess
	}
	return false
}

//CreateSystemNotificationRequest
type CreateSystemNotificationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NoticeTitle     string `protobuf:"bytes,1,opt,name=noticeTitle,proto3" json:"noticeTitle,omitempty"`                                   //通知标题
	NoticeContent   string `protobuf:"bytes,2,opt,name=noticeContent,proto3" json:"noticeContent,omitempty"`                               // 通知内容
	NoticeCategory  int64  `protobuf:"varint,3,opt,name=noticeCategory,proto3" json:"noticeCategory,omitempty"`                            // 通知类别 0：手动通知 1：自动通知
	NoticeStatus    int64  `protobuf:"varint,4,opt,name=notice_status,json=noticeStatus,proto3" json:"notice_status,omitempty"`            // 通知状态   0:待发布 1：已发布 2：已下架
	NoticeStartTime int64  `protobuf:"varint,5,opt,name=notice_start_time,json=noticeStartTime,proto3" json:"notice_start_time,omitempty"` // 自动通知时间
}

func (x *CreateSystemNotificationRequest) Reset() {
	*x = CreateSystemNotificationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSystemNotificationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSystemNotificationRequest) ProtoMessage() {}

func (x *CreateSystemNotificationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSystemNotificationRequest.ProtoReflect.Descriptor instead.
func (*CreateSystemNotificationRequest) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{63}
}

func (x *CreateSystemNotificationRequest) GetNoticeTitle() string {
	if x != nil {
		return x.NoticeTitle
	}
	return ""
}

func (x *CreateSystemNotificationRequest) GetNoticeContent() string {
	if x != nil {
		return x.NoticeContent
	}
	return ""
}

func (x *CreateSystemNotificationRequest) GetNoticeCategory() int64 {
	if x != nil {
		return x.NoticeCategory
	}
	return 0
}

func (x *CreateSystemNotificationRequest) GetNoticeStatus() int64 {
	if x != nil {
		return x.NoticeStatus
	}
	return 0
}

func (x *CreateSystemNotificationRequest) GetNoticeStartTime() int64 {
	if x != nil {
		return x.NoticeStartTime
	}
	return 0
}

type CreateSystemNotificationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsSuccess      bool  `protobuf:"varint,1,opt,name=is_success,json=isSuccess,proto3" json:"is_success,omitempty"` //是否成功
	SystemNoticeId int64 `protobuf:"varint,2,opt,name=systemNoticeId,proto3" json:"systemNoticeId,omitempty"`        // 系统通知id
}

func (x *CreateSystemNotificationResponse) Reset() {
	*x = CreateSystemNotificationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSystemNotificationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSystemNotificationResponse) ProtoMessage() {}

func (x *CreateSystemNotificationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSystemNotificationResponse.ProtoReflect.Descriptor instead.
func (*CreateSystemNotificationResponse) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{64}
}

func (x *CreateSystemNotificationResponse) GetIsSuccess() bool {
	if x != nil {
		return x.IsSuccess
	}
	return false
}

func (x *CreateSystemNotificationResponse) GetSystemNoticeId() int64 {
	if x != nil {
		return x.SystemNoticeId
	}
	return 0
}

//EditSystemNotificationRequest
type EditSystemNotificationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NoticeTitle     string `protobuf:"bytes,1,opt,name=noticeTitle,proto3" json:"noticeTitle,omitempty"`                                   //通知标题
	NoticeContent   string `protobuf:"bytes,2,opt,name=noticeContent,proto3" json:"noticeContent,omitempty"`                               // 通知内容
	NoticeCategory  int64  `protobuf:"varint,3,opt,name=noticeCategory,proto3" json:"noticeCategory,omitempty"`                            // 通知类别 0：手动通知 1：自动通知
	NoticeStatus    int64  `protobuf:"varint,4,opt,name=notice_status,json=noticeStatus,proto3" json:"notice_status,omitempty"`            // 通知状态   0:待发布 1：已发布 2：已下架
	NoticeStartTime int64  `protobuf:"varint,5,opt,name=notice_start_time,json=noticeStartTime,proto3" json:"notice_start_time,omitempty"` // 自动通知时间
	SystemNoticeId  int64  `protobuf:"varint,6,opt,name=systemNoticeId,proto3" json:"systemNoticeId,omitempty"`                            // 系统通知id
}

func (x *EditSystemNotificationRequest) Reset() {
	*x = EditSystemNotificationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EditSystemNotificationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditSystemNotificationRequest) ProtoMessage() {}

func (x *EditSystemNotificationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditSystemNotificationRequest.ProtoReflect.Descriptor instead.
func (*EditSystemNotificationRequest) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{65}
}

func (x *EditSystemNotificationRequest) GetNoticeTitle() string {
	if x != nil {
		return x.NoticeTitle
	}
	return ""
}

func (x *EditSystemNotificationRequest) GetNoticeContent() string {
	if x != nil {
		return x.NoticeContent
	}
	return ""
}

func (x *EditSystemNotificationRequest) GetNoticeCategory() int64 {
	if x != nil {
		return x.NoticeCategory
	}
	return 0
}

func (x *EditSystemNotificationRequest) GetNoticeStatus() int64 {
	if x != nil {
		return x.NoticeStatus
	}
	return 0
}

func (x *EditSystemNotificationRequest) GetNoticeStartTime() int64 {
	if x != nil {
		return x.NoticeStartTime
	}
	return 0
}

func (x *EditSystemNotificationRequest) GetSystemNoticeId() int64 {
	if x != nil {
		return x.SystemNoticeId
	}
	return 0
}

type EditSystemNotificationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsSuccess bool `protobuf:"varint,1,opt,name=is_success,json=isSuccess,proto3" json:"is_success,omitempty"` //是否成功
}

func (x *EditSystemNotificationResponse) Reset() {
	*x = EditSystemNotificationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EditSystemNotificationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditSystemNotificationResponse) ProtoMessage() {}

func (x *EditSystemNotificationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditSystemNotificationResponse.ProtoReflect.Descriptor instead.
func (*EditSystemNotificationResponse) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{66}
}

func (x *EditSystemNotificationResponse) GetIsSuccess() bool {
	if x != nil {
		return x.IsSuccess
	}
	return false
}

//GetSystemNotificationsRequest
type GetSystemNotificationsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NoticeCategory int64 `protobuf:"varint,1,opt,name=noticeCategory,proto3" json:"noticeCategory,omitempty"`                 // 通知类别 0：手动通知 1：自动通知 2：全部
	NoticeStatus   int64 `protobuf:"varint,2,opt,name=notice_status,json=noticeStatus,proto3" json:"notice_status,omitempty"` // 通知状态   0:待发布 1：已发布 2：已下架
}

func (x *GetSystemNotificationsRequest) Reset() {
	*x = GetSystemNotificationsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSystemNotificationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSystemNotificationsRequest) ProtoMessage() {}

func (x *GetSystemNotificationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSystemNotificationsRequest.ProtoReflect.Descriptor instead.
func (*GetSystemNotificationsRequest) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{67}
}

func (x *GetSystemNotificationsRequest) GetNoticeCategory() int64 {
	if x != nil {
		return x.NoticeCategory
	}
	return 0
}

func (x *GetSystemNotificationsRequest) GetNoticeStatus() int64 {
	if x != nil {
		return x.NoticeStatus
	}
	return 0
}

type SystemNotification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NoticeTitle     string `protobuf:"bytes,1,opt,name=noticeTitle,proto3" json:"noticeTitle,omitempty"`                                   //通知标题
	NoticeContent   string `protobuf:"bytes,2,opt,name=noticeContent,proto3" json:"noticeContent,omitempty"`                               // 通知内容
	NoticeCategory  int64  `protobuf:"varint,3,opt,name=noticeCategory,proto3" json:"noticeCategory,omitempty"`                            // 通知类别 0：手动通知 1：自动通知
	NoticeStatus    int64  `protobuf:"varint,4,opt,name=notice_status,json=noticeStatus,proto3" json:"notice_status,omitempty"`            // 通知状态   0:待发布 1：已发布 2：已下架
	NoticeStartTime int64  `protobuf:"varint,5,opt,name=notice_start_time,json=noticeStartTime,proto3" json:"notice_start_time,omitempty"` // 自动通知时间
	SystemNoticeId  int64  `protobuf:"varint,6,opt,name=systemNoticeId,proto3" json:"systemNoticeId,omitempty"`                            // 系统通知id
}

func (x *SystemNotification) Reset() {
	*x = SystemNotification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemNotification) ProtoMessage() {}

func (x *SystemNotification) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemNotification.ProtoReflect.Descriptor instead.
func (*SystemNotification) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{68}
}

func (x *SystemNotification) GetNoticeTitle() string {
	if x != nil {
		return x.NoticeTitle
	}
	return ""
}

func (x *SystemNotification) GetNoticeContent() string {
	if x != nil {
		return x.NoticeContent
	}
	return ""
}

func (x *SystemNotification) GetNoticeCategory() int64 {
	if x != nil {
		return x.NoticeCategory
	}
	return 0
}

func (x *SystemNotification) GetNoticeStatus() int64 {
	if x != nil {
		return x.NoticeStatus
	}
	return 0
}

func (x *SystemNotification) GetNoticeStartTime() int64 {
	if x != nil {
		return x.NoticeStartTime
	}
	return 0
}

func (x *SystemNotification) GetSystemNoticeId() int64 {
	if x != nil {
		return x.SystemNoticeId
	}
	return 0
}

type GetSystemNotificationsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SystemNotifications []*SystemNotification `protobuf:"bytes,1,rep,name=systemNotifications,proto3" json:"systemNotifications,omitempty"` //系统通知
}

func (x *GetSystemNotificationsResponse) Reset() {
	*x = GetSystemNotificationsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSystemNotificationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSystemNotificationsResponse) ProtoMessage() {}

func (x *GetSystemNotificationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSystemNotificationsResponse.ProtoReflect.Descriptor instead.
func (*GetSystemNotificationsResponse) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{69}
}

func (x *GetSystemNotificationsResponse) GetSystemNotifications() []*SystemNotification {
	if x != nil {
		return x.SystemNotifications
	}
	return nil
}

//QuerySystemNotificationRequest
type QuerySystemNotificationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SystemNoticeId int64 `protobuf:"varint,1,opt,name=systemNoticeId,proto3" json:"systemNoticeId,omitempty"` // 系统通知id
}

func (x *QuerySystemNotificationRequest) Reset() {
	*x = QuerySystemNotificationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuerySystemNotificationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuerySystemNotificationRequest) ProtoMessage() {}

func (x *QuerySystemNotificationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuerySystemNotificationRequest.ProtoReflect.Descriptor instead.
func (*QuerySystemNotificationRequest) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{70}
}

func (x *QuerySystemNotificationRequest) GetSystemNoticeId() int64 {
	if x != nil {
		return x.SystemNoticeId
	}
	return 0
}

type QuerySystemNotificationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NoticeTitle     string `protobuf:"bytes,1,opt,name=noticeTitle,proto3" json:"noticeTitle,omitempty"`                                   //通知标题
	NoticeContent   string `protobuf:"bytes,2,opt,name=noticeContent,proto3" json:"noticeContent,omitempty"`                               // 通知内容
	NoticeCategory  int64  `protobuf:"varint,3,opt,name=noticeCategory,proto3" json:"noticeCategory,omitempty"`                            // 通知类别 0：手动通知 1：自动通知
	NoticeStatus    int64  `protobuf:"varint,4,opt,name=notice_status,json=noticeStatus,proto3" json:"notice_status,omitempty"`            // 通知状态   0:待发布 1：已发布 2：已下架
	NoticeStartTime int64  `protobuf:"varint,5,opt,name=notice_start_time,json=noticeStartTime,proto3" json:"notice_start_time,omitempty"` // 自动通知时间
	SystemNoticeId  int64  `protobuf:"varint,6,opt,name=systemNoticeId,proto3" json:"systemNoticeId,omitempty"`                            // 系统通知id
}

func (x *QuerySystemNotificationResponse) Reset() {
	*x = QuerySystemNotificationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuerySystemNotificationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuerySystemNotificationResponse) ProtoMessage() {}

func (x *QuerySystemNotificationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuerySystemNotificationResponse.ProtoReflect.Descriptor instead.
func (*QuerySystemNotificationResponse) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{71}
}

func (x *QuerySystemNotificationResponse) GetNoticeTitle() string {
	if x != nil {
		return x.NoticeTitle
	}
	return ""
}

func (x *QuerySystemNotificationResponse) GetNoticeContent() string {
	if x != nil {
		return x.NoticeContent
	}
	return ""
}

func (x *QuerySystemNotificationResponse) GetNoticeCategory() int64 {
	if x != nil {
		return x.NoticeCategory
	}
	return 0
}

func (x *QuerySystemNotificationResponse) GetNoticeStatus() int64 {
	if x != nil {
		return x.NoticeStatus
	}
	return 0
}

func (x *QuerySystemNotificationResponse) GetNoticeStartTime() int64 {
	if x != nil {
		return x.NoticeStartTime
	}
	return 0
}

func (x *QuerySystemNotificationResponse) GetSystemNoticeId() int64 {
	if x != nil {
		return x.SystemNoticeId
	}
	return 0
}

//CreateNoticeRequest
type CreateNoticeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId               int64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                                           // 用户id
	SystemNoticeId       int64 `protobuf:"varint,2,opt,name=systemNotice_id,json=systemNoticeId,proto3" json:"systemNotice_id,omitempty"`                   // 系统通知id
	UserNoticeId         int64 `protobuf:"varint,3,opt,name=userNotice_id,json=userNoticeId,proto3" json:"userNotice_id,omitempty"`                         // 用户通知id
	RecordNoticeCategory int64 `protobuf:"varint,4,opt,name=recordNotice_category,json=recordNoticeCategory,proto3" json:"recordNotice_category,omitempty"` // 通知类别 0：系统通知 1：用户通知
	RecordNoticeStatus   int64 `protobuf:"varint,5,opt,name=recordNotice_status,json=recordNoticeStatus,proto3" json:"recordNotice_status,omitempty"`       // 通知状态   0:未读 1：已读
}

func (x *CreateNoticeRequest) Reset() {
	*x = CreateNoticeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateNoticeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNoticeRequest) ProtoMessage() {}

func (x *CreateNoticeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNoticeRequest.ProtoReflect.Descriptor instead.
func (*CreateNoticeRequest) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{72}
}

func (x *CreateNoticeRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *CreateNoticeRequest) GetSystemNoticeId() int64 {
	if x != nil {
		return x.SystemNoticeId
	}
	return 0
}

func (x *CreateNoticeRequest) GetUserNoticeId() int64 {
	if x != nil {
		return x.UserNoticeId
	}
	return 0
}

func (x *CreateNoticeRequest) GetRecordNoticeCategory() int64 {
	if x != nil {
		return x.RecordNoticeCategory
	}
	return 0
}

func (x *CreateNoticeRequest) GetRecordNoticeStatus() int64 {
	if x != nil {
		return x.RecordNoticeStatus
	}
	return 0
}

type CreateNoticeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsSuccess bool `protobuf:"varint,1,opt,name=is_success,json=isSuccess,proto3" json:"is_success,omitempty"` //是否成功
}

func (x *CreateNoticeResponse) Reset() {
	*x = CreateNoticeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateNoticeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNoticeResponse) ProtoMessage() {}

func (x *CreateNoticeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNoticeResponse.ProtoReflect.Descriptor instead.
func (*CreateNoticeResponse) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{73}
}

func (x *CreateNoticeResponse) GetIsSuccess() bool {
	if x != nil {
		return x.IsSuccess
	}
	return false
}

//RecordNoticeRequest
type RecordNoticeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId               int64  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                                           // 用户id
	RecordNoticeCategory int64  `protobuf:"varint,2,opt,name=recordNotice_category,json=recordNoticeCategory,proto3" json:"recordNotice_category,omitempty"` // 通知类别 0：系统通知 1：用户通知
	RecordNoticeStatus   int64  `protobuf:"varint,3,opt,name=recordNotice_status,json=recordNoticeStatus,proto3" json:"recordNotice_status,omitempty"`       // 通知状态   0:未读 1：已读
	LastNoticeId         string `protobuf:"bytes,4,opt,name=lastNoticeId,proto3" json:"lastNoticeId,omitempty"`                                              // 上条通知id 用来刷新
	Limit                int64  `protobuf:"varint,5,opt,name=limit,proto3" json:"limit,omitempty"`                                                           // 条数
	Sort                 int64  `protobuf:"varint,6,opt,name=sort,proto3" json:"sort,omitempty"`                                                             // 排序 0：正序 1：倒序
}

func (x *RecordNoticeRequest) Reset() {
	*x = RecordNoticeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecordNoticeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordNoticeRequest) ProtoMessage() {}

func (x *RecordNoticeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordNoticeRequest.ProtoReflect.Descriptor instead.
func (*RecordNoticeRequest) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{74}
}

func (x *RecordNoticeRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *RecordNoticeRequest) GetRecordNoticeCategory() int64 {
	if x != nil {
		return x.RecordNoticeCategory
	}
	return 0
}

func (x *RecordNoticeRequest) GetRecordNoticeStatus() int64 {
	if x != nil {
		return x.RecordNoticeStatus
	}
	return 0
}

func (x *RecordNoticeRequest) GetLastNoticeId() string {
	if x != nil {
		return x.LastNoticeId
	}
	return ""
}

func (x *RecordNoticeRequest) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *RecordNoticeRequest) GetSort() int64 {
	if x != nil {
		return x.Sort
	}
	return 0
}

// Notice
type Notice struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId               int64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                                           // 用户id
	SystemNoticeId       int64 `protobuf:"varint,2,opt,name=systemNotice_id,json=systemNoticeId,proto3" json:"systemNotice_id,omitempty"`                   // 系统通知id
	UserNoticeId         int64 `protobuf:"varint,3,opt,name=userNotice_id,json=userNoticeId,proto3" json:"userNotice_id,omitempty"`                         // 用户通知id
	RecordNoticeCategory int64 `protobuf:"varint,4,opt,name=recordNotice_category,json=recordNoticeCategory,proto3" json:"recordNotice_category,omitempty"` // 通知类别 0：系统通知 1：用户通知
	RecordNoticeStatus   int64 `protobuf:"varint,5,opt,name=recordNotice_status,json=recordNoticeStatus,proto3" json:"recordNotice_status,omitempty"`       // 通知状态   0:未读 1：已读
	CreateTime           int64 `protobuf:"varint,6,opt,name=createTime,proto3" json:"createTime,omitempty"`                                                 // 创建时间
	UpdateTime           int64 `protobuf:"varint,7,opt,name=updateTime,proto3" json:"updateTime,omitempty"`                                                 // 更新时间
}

func (x *Notice) Reset() {
	*x = Notice{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Notice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Notice) ProtoMessage() {}

func (x *Notice) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Notice.ProtoReflect.Descriptor instead.
func (*Notice) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{75}
}

func (x *Notice) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *Notice) GetSystemNoticeId() int64 {
	if x != nil {
		return x.SystemNoticeId
	}
	return 0
}

func (x *Notice) GetUserNoticeId() int64 {
	if x != nil {
		return x.UserNoticeId
	}
	return 0
}

func (x *Notice) GetRecordNoticeCategory() int64 {
	if x != nil {
		return x.RecordNoticeCategory
	}
	return 0
}

func (x *Notice) GetRecordNoticeStatus() int64 {
	if x != nil {
		return x.RecordNoticeStatus
	}
	return 0
}

func (x *Notice) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *Notice) GetUpdateTime() int64 {
	if x != nil {
		return x.UpdateTime
	}
	return 0
}

type RecordNoticeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Notice []*Notice `protobuf:"bytes,1,rep,name=notice,proto3" json:"notice,omitempty"` //通知
}

func (x *RecordNoticeResponse) Reset() {
	*x = RecordNoticeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecordNoticeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordNoticeResponse) ProtoMessage() {}

func (x *RecordNoticeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordNoticeResponse.ProtoReflect.Descriptor instead.
func (*RecordNoticeResponse) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{76}
}

func (x *RecordNoticeResponse) GetNotice() []*Notice {
	if x != nil {
		return x.Notice
	}
	return nil
}

//QueryRecordNoticeRequest
type QueryRecordNoticeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId   int64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // 用户id
	NoticeId int64 `protobuf:"varint,2,opt,name=Notice_id,json=NoticeId,proto3" json:"Notice_id,omitempty"`
}

func (x *QueryRecordNoticeRequest) Reset() {
	*x = QueryRecordNoticeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryRecordNoticeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryRecordNoticeRequest) ProtoMessage() {}

func (x *QueryRecordNoticeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryRecordNoticeRequest.ProtoReflect.Descriptor instead.
func (*QueryRecordNoticeRequest) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{77}
}

func (x *QueryRecordNoticeRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *QueryRecordNoticeRequest) GetNoticeId() int64 {
	if x != nil {
		return x.NoticeId
	}
	return 0
}

type QueryRecordNoticeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RecordNoticeCategory int64 `protobuf:"varint,1,opt,name=recordNotice_category,json=recordNoticeCategory,proto3" json:"recordNotice_category,omitempty"` // 通知类别 0：系统通知 1：用户通知
}

func (x *QueryRecordNoticeResponse) Reset() {
	*x = QueryRecordNoticeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryRecordNoticeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryRecordNoticeResponse) ProtoMessage() {}

func (x *QueryRecordNoticeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryRecordNoticeResponse.ProtoReflect.Descriptor instead.
func (*QueryRecordNoticeResponse) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{78}
}

func (x *QueryRecordNoticeResponse) GetRecordNoticeCategory() int64 {
	if x != nil {
		return x.RecordNoticeCategory
	}
	return 0
}

//RegisterCountResponse
type RegisterCountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count int64 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"` // 注册人数
}

func (x *RegisterCountResponse) Reset() {
	*x = RegisterCountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterCountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterCountResponse) ProtoMessage() {}

func (x *RegisterCountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterCountResponse.ProtoReflect.Descriptor instead.
func (*RegisterCountResponse) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{79}
}

func (x *RegisterCountResponse) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

//OnlineCountResponse
type OnlineCountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count int64 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"` // 在线人数
}

func (x *OnlineCountResponse) Reset() {
	*x = OnlineCountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OnlineCountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnlineCountResponse) ProtoMessage() {}

func (x *OnlineCountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnlineCountResponse.ProtoReflect.Descriptor instead.
func (*OnlineCountResponse) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{80}
}

func (x *OnlineCountResponse) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

//CreateNotificationRequest
type CreateNotificationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId             int64  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                                     // 用户id
	NoticeContent      string `protobuf:"bytes,2,opt,name=noticeContent,proto3" json:"noticeContent,omitempty"`                                      //通知标题
	RecordNoticeStatus int64  `protobuf:"varint,3,opt,name=recordNotice_status,json=recordNoticeStatus,proto3" json:"recordNotice_status,omitempty"` // 通知状态   1：已发布 2：已下架
}

func (x *CreateNotificationRequest) Reset() {
	*x = CreateNotificationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateNotificationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNotificationRequest) ProtoMessage() {}

func (x *CreateNotificationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNotificationRequest.ProtoReflect.Descriptor instead.
func (*CreateNotificationRequest) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{81}
}

func (x *CreateNotificationRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *CreateNotificationRequest) GetNoticeContent() string {
	if x != nil {
		return x.NoticeContent
	}
	return ""
}

func (x *CreateNotificationRequest) GetRecordNoticeStatus() int64 {
	if x != nil {
		return x.RecordNoticeStatus
	}
	return 0
}

//CreateNotificationResponse
type CreateNotificationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserNoticeId int64 `protobuf:"varint,1,opt,name=userNotice_id,json=userNoticeId,proto3" json:"userNotice_id,omitempty"` // 用户通知id
	IsSuccess    bool  `protobuf:"varint,2,opt,name=is_success,json=isSuccess,proto3" json:"is_success,omitempty"`          //是否成功
}

func (x *CreateNotificationResponse) Reset() {
	*x = CreateNotificationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateNotificationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNotificationResponse) ProtoMessage() {}

func (x *CreateNotificationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNotificationResponse.ProtoReflect.Descriptor instead.
func (*CreateNotificationResponse) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{82}
}

func (x *CreateNotificationResponse) GetUserNoticeId() int64 {
	if x != nil {
		return x.UserNoticeId
	}
	return 0
}

func (x *CreateNotificationResponse) GetIsSuccess() bool {
	if x != nil {
		return x.IsSuccess
	}
	return false
}

//GetUserNotificationsRequest
type GetUserNotificationsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserNoticeId int64 `protobuf:"varint,1,opt,name=userNotice_id,json=userNoticeId,proto3" json:"userNotice_id,omitempty"` // 用户通知id
}

func (x *GetUserNotificationsRequest) Reset() {
	*x = GetUserNotificationsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserNotificationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserNotificationsRequest) ProtoMessage() {}

func (x *GetUserNotificationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserNotificationsRequest.ProtoReflect.Descriptor instead.
func (*GetUserNotificationsRequest) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{83}
}

func (x *GetUserNotificationsRequest) GetUserNoticeId() int64 {
	if x != nil {
		return x.UserNoticeId
	}
	return 0
}

//GetUserNotificationsResponse
type GetUserNotificationsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NoticeContent string `protobuf:"bytes,1,opt,name=notice_content,json=noticeContent,proto3" json:"notice_content,omitempty"` //通知标题
	UserId        int64  `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                     // 用户id
	NoticeStatus  int64  `protobuf:"varint,3,opt,name=notice_status,json=noticeStatus,proto3" json:"notice_status,omitempty"`   // 通知状态   1：已发布 2：已下架
}

func (x *GetUserNotificationsResponse) Reset() {
	*x = GetUserNotificationsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserNotificationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserNotificationsResponse) ProtoMessage() {}

func (x *GetUserNotificationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserNotificationsResponse.ProtoReflect.Descriptor instead.
func (*GetUserNotificationsResponse) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{84}
}

func (x *GetUserNotificationsResponse) GetNoticeContent() string {
	if x != nil {
		return x.NoticeContent
	}
	return ""
}

func (x *GetUserNotificationsResponse) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GetUserNotificationsResponse) GetNoticeStatus() int64 {
	if x != nil {
		return x.NoticeStatus
	}
	return 0
}

type UserListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserResponseLists []*UserResponseList `protobuf:"bytes,1,rep,name=userResponseLists,proto3" json:"userResponseLists,omitempty"` //用户
}

func (x *UserListResponse) Reset() {
	*x = UserListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserListResponse) ProtoMessage() {}

func (x *UserListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserListResponse.ProtoReflect.Descriptor instead.
func (*UserListResponse) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{85}
}

func (x *UserListResponse) GetUserResponseLists() []*UserResponseList {
	if x != nil {
		return x.UserResponseLists
	}
	return nil
}

type UserResponseList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TwitterName string `protobuf:"bytes,1,opt,name=twitter_name,json=twitterName,proto3" json:"twitter_name,omitempty"` //推特名
	UserName    string `protobuf:"bytes,2,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`          //用户名
	UserAvatar  string `protobuf:"bytes,3,opt,name=user_avatar,json=userAvatar,proto3" json:"user_avatar,omitempty"`    //用户头像
}

func (x *UserResponseList) Reset() {
	*x = UserResponseList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserResponseList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserResponseList) ProtoMessage() {}

func (x *UserResponseList) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserResponseList.ProtoReflect.Descriptor instead.
func (*UserResponseList) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{86}
}

func (x *UserResponseList) GetTwitterName() string {
	if x != nil {
		return x.TwitterName
	}
	return ""
}

func (x *UserResponseList) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *UserResponseList) GetUserAvatar() string {
	if x != nil {
		return x.UserAvatar
	}
	return ""
}

//QueryHelpCategoryRequest
type QueryHelpCategoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//CategoryName
	CategoryName string `protobuf:"bytes,1,opt,name=categoryName,proto3" json:"categoryName,omitempty"` //类别名
	Limit        int64  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`              // 每页条数
	//IsShow
	IsShow int64 `protobuf:"varint,3,opt,name=isShow,proto3" json:"isShow,omitempty"` // 是否显示 0:上架 1:下架 2:全部
	//LastId
	LastId int64 `protobuf:"varint,4,opt,name=lastId,proto3" json:"lastId,omitempty"` // 上条最后数据的id 用来刷新
}

func (x *QueryHelpCategoryRequest) Reset() {
	*x = QueryHelpCategoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[87]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryHelpCategoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryHelpCategoryRequest) ProtoMessage() {}

func (x *QueryHelpCategoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[87]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryHelpCategoryRequest.ProtoReflect.Descriptor instead.
func (*QueryHelpCategoryRequest) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{87}
}

func (x *QueryHelpCategoryRequest) GetCategoryName() string {
	if x != nil {
		return x.CategoryName
	}
	return ""
}

func (x *QueryHelpCategoryRequest) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *QueryHelpCategoryRequest) GetIsShow() int64 {
	if x != nil {
		return x.IsShow
	}
	return 0
}

func (x *QueryHelpCategoryRequest) GetLastId() int64 {
	if x != nil {
		return x.LastId
	}
	return 0
}

//TotalCategoryResponse
type TotalCategory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//分类id
	CategoryId int64 `protobuf:"varint,1,opt,name=categoryId,proto3" json:"categoryId,omitempty"` // 分类id
	//分类名
	CategoryName string `protobuf:"bytes,2,opt,name=categoryName,proto3" json:"categoryName,omitempty"` //类别名
	//是否显示
	IsShow int64 `protobuf:"varint,3,opt,name=isShow,proto3" json:"isShow,omitempty"` // 是否显示 0：默认 1：显示 2：不显示
}

func (x *TotalCategory) Reset() {
	*x = TotalCategory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[88]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TotalCategory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TotalCategory) ProtoMessage() {}

func (x *TotalCategory) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[88]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TotalCategory.ProtoReflect.Descriptor instead.
func (*TotalCategory) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{88}
}

func (x *TotalCategory) GetCategoryId() int64 {
	if x != nil {
		return x.CategoryId
	}
	return 0
}

func (x *TotalCategory) GetCategoryName() string {
	if x != nil {
		return x.CategoryName
	}
	return ""
}

func (x *TotalCategory) GetIsShow() int64 {
	if x != nil {
		return x.IsShow
	}
	return 0
}

//QueryHelpCategoryResponse
type QueryHelpCategoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//TotalCount
	TotalCount     int64            `protobuf:"varint,1,opt,name=totalCount,proto3" json:"totalCount,omitempty"` // 总条数
	TotalCategorys []*TotalCategory `protobuf:"bytes,2,rep,name=totalCategorys,proto3" json:"totalCategorys,omitempty"`
}

func (x *QueryHelpCategoryResponse) Reset() {
	*x = QueryHelpCategoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[89]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryHelpCategoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryHelpCategoryResponse) ProtoMessage() {}

func (x *QueryHelpCategoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[89]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryHelpCategoryResponse.ProtoReflect.Descriptor instead.
func (*QueryHelpCategoryResponse) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{89}
}

func (x *QueryHelpCategoryResponse) GetTotalCount() int64 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *QueryHelpCategoryResponse) GetTotalCategorys() []*TotalCategory {
	if x != nil {
		return x.TotalCategorys
	}
	return nil
}

//QueryHelpDocumentRequest
type QueryHelpDocumentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DocumentTitle string `protobuf:"bytes,1,opt,name=documentTitle,proto3" json:"documentTitle,omitempty"` //文档标题
	IsShow        int64  `protobuf:"varint,2,opt,name=isShow,proto3" json:"isShow,omitempty"`              // 是否显示 0:上架 1:下架 2:全部
	LastId        int64  `protobuf:"varint,3,opt,name=lastId,proto3" json:"lastId,omitempty"`              // 上条最后数据的id 用来刷新
}

func (x *QueryHelpDocumentRequest) Reset() {
	*x = QueryHelpDocumentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[90]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryHelpDocumentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryHelpDocumentRequest) ProtoMessage() {}

func (x *QueryHelpDocumentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[90]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryHelpDocumentRequest.ProtoReflect.Descriptor instead.
func (*QueryHelpDocumentRequest) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{90}
}

func (x *QueryHelpDocumentRequest) GetDocumentTitle() string {
	if x != nil {
		return x.DocumentTitle
	}
	return ""
}

func (x *QueryHelpDocumentRequest) GetIsShow() int64 {
	if x != nil {
		return x.IsShow
	}
	return 0
}

func (x *QueryHelpDocumentRequest) GetLastId() int64 {
	if x != nil {
		return x.LastId
	}
	return 0
}

//TotalDocument
type TotalDocument struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DocumentId    int64  `protobuf:"varint,1,opt,name=documentId,proto3" json:"documentId,omitempty"`      // 文档id
	DocumentTitle string `protobuf:"bytes,2,opt,name=documentTitle,proto3" json:"documentTitle,omitempty"` //文档标题
	CategoryName  string `protobuf:"bytes,4,opt,name=categoryName,proto3" json:"categoryName,omitempty"`   //类别名
	IsShow        int64  `protobuf:"varint,5,opt,name=isShow,proto3" json:"isShow,omitempty"`              // 是否显示 0：默认 1：显示 2：不显示
}

func (x *TotalDocument) Reset() {
	*x = TotalDocument{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[91]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TotalDocument) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TotalDocument) ProtoMessage() {}

func (x *TotalDocument) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[91]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TotalDocument.ProtoReflect.Descriptor instead.
func (*TotalDocument) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{91}
}

func (x *TotalDocument) GetDocumentId() int64 {
	if x != nil {
		return x.DocumentId
	}
	return 0
}

func (x *TotalDocument) GetDocumentTitle() string {
	if x != nil {
		return x.DocumentTitle
	}
	return ""
}

func (x *TotalDocument) GetCategoryName() string {
	if x != nil {
		return x.CategoryName
	}
	return ""
}

func (x *TotalDocument) GetIsShow() int64 {
	if x != nil {
		return x.IsShow
	}
	return 0
}

//QueryHelpDocumentResponse
type QueryHelpDocumentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalCount     int64            `protobuf:"varint,1,opt,name=totalCount,proto3" json:"totalCount,omitempty"` // 总条数
	TotalDocuments []*TotalDocument `protobuf:"bytes,2,rep,name=totalDocuments,proto3" json:"totalDocuments,omitempty"`
}

func (x *QueryHelpDocumentResponse) Reset() {
	*x = QueryHelpDocumentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[92]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryHelpDocumentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryHelpDocumentResponse) ProtoMessage() {}

func (x *QueryHelpDocumentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[92]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryHelpDocumentResponse.ProtoReflect.Descriptor instead.
func (*QueryHelpDocumentResponse) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{92}
}

func (x *QueryHelpDocumentResponse) GetTotalCount() int64 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *QueryHelpDocumentResponse) GetTotalDocuments() []*TotalDocument {
	if x != nil {
		return x.TotalDocuments
	}
	return nil
}

var File_user_proto protoreflect.FileDescriptor

var file_user_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x75, 0x73,
	0x65, 0x72, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x1d, 0x0a,
	0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x69, 0x6e, 0x67,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x69, 0x6e, 0x67, 0x22, 0x1e, 0x0a, 0x08,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x22, 0x36, 0x0a, 0x15,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x54, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x77, 0x69, 0x74, 0x74,
	0x65, 0x72, 0x49, 0x64, 0x22, 0x31, 0x0a, 0x16, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x54, 0x77, 0x69,
	0x74, 0x74, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x17,
	0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x55, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x74, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x74, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x74,
	0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x74, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x2d,
	0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x4b, 0x0a,
	0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x49, 0x64, 0x22, 0x3b, 0x0a, 0x14, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x6e, 0x76, 0x69, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x32, 0x0a, 0x17, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x54, 0x6f, 0x64, 0x61, 0x79, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x37, 0x0a, 0x18, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x54, 0x6f, 0x64, 0x61, 0x79, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x69, 0x6e,
	0x76, 0x69, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x49, 0x6e,
	0x76, 0x69, 0x74, 0x65, 0x22, 0x8e, 0x01, 0x0a, 0x12, 0x41, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x77, 0x69, 0x74,
	0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x61, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x41,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x22, 0x34, 0x0a, 0x13, 0x41, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x69, 0x73, 0x5f, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x09, 0x69, 0x73, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x2b, 0x0a, 0x10, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x8b, 0x01, 0x0a, 0x11, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21,
	0x0a, 0x0c, 0x74, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f,
	0x0a, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12,
	0x15, 0x0a, 0x06, 0x69, 0x73, 0x5f, 0x6e, 0x65, 0x77, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x69, 0x73, 0x4e, 0x65, 0x77, 0x22, 0x88, 0x01, 0x0a, 0x13, 0x41, 0x64, 0x64, 0x42, 0x6c,
	0x61, 0x63, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17,
	0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x62, 0x6c, 0x61, 0x63, 0x6b,
	0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x62, 0x6c, 0x61, 0x63, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x62,
	0x61, 0x6e, 0x5f, 0x64, 0x61, 0x79, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x62,
	0x61, 0x6e, 0x44, 0x61, 0x79, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x61, 0x6e, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x62, 0x61, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x22, 0x35, 0x0a, 0x14, 0x41, 0x64, 0x64, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69,
	0x73, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x30, 0x0a, 0x15, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x3c, 0x0a, 0x16, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x62, 0x6c, 0x61, 0x63, 0x6b, 0x5f, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x62, 0x6c, 0x61,
	0x63, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x55, 0x0a, 0x16, 0x52, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x62,
	0x6c, 0x61, 0x63, 0x6b, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x62, 0x6c, 0x61, 0x63, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22,
	0x38, 0x0a, 0x17, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73,
	0x5f, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09,
	0x69, 0x73, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x53, 0x0a, 0x0f, 0x41, 0x64, 0x64,
	0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x50, 0x61, 0x73, 0x73, 0x77, 0x64, 0x22, 0x31,
	0x0a, 0x10, 0x41, 0x64, 0x64, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x22, 0x55, 0x0a, 0x11, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x70,
	0x61, 0x73, 0x73, 0x77, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x50, 0x61, 0x73, 0x73, 0x77, 0x64, 0x22, 0x38, 0x0a, 0x12, 0x41, 0x64, 0x6d, 0x69,
	0x6e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22,
	0x0a, 0x0d, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x22, 0x38, 0x0a, 0x12, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x41, 0x64, 0x6d, 0x69,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0d, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0b, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x34, 0x0a, 0x13,
	0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x53, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x22, 0x42, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x48, 0x65, 0x6c, 0x70, 0x43, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26,
	0x0a, 0x0e, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x7c, 0x0a, 0x0c, 0x48, 0x65, 0x6c, 0x70, 0x43, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x26, 0x0a, 0x0e, 0x68, 0x65, 0x6c, 0x70, 0x43, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e,
	0x68, 0x65, 0x6c, 0x70, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x1c,
	0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x26, 0x0a, 0x0e,
	0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x22, 0x58, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x48, 0x65, 0x6c, 0x70, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x3b, 0x0a, 0x0f, 0x68, 0x65, 0x6c, 0x70, 0x5f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x2e, 0x48, 0x65, 0x6c, 0x70, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x0e,
	0x68, 0x65, 0x6c, 0x70, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x22, 0x61,
	0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x48, 0x65, 0x6c, 0x70, 0x43, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0e, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x22, 0x44, 0x0a, 0x1a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x48, 0x65, 0x6c, 0x70, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x26, 0x0a, 0x0e, 0x68, 0x65, 0x6c, 0x70, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x68, 0x65, 0x6c, 0x70, 0x43, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x22, 0x43, 0x0a, 0x19, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x48, 0x65, 0x6c, 0x70, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x68, 0x65, 0x6c, 0x70, 0x43, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x68, 0x65,
	0x6c, 0x70, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x22, 0x3b, 0x0a, 0x1a,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x48, 0x65, 0x6c, 0x70, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73,
	0x5f, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09,
	0x69, 0x73, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x69, 0x0a, 0x17, 0x45, 0x64, 0x69,
	0x74, 0x48, 0x65, 0x6c, 0x70, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x68, 0x65, 0x6c, 0x70, 0x43, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x68, 0x65,
	0x6c, 0x70, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0e,
	0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x22, 0x39, 0x0a, 0x18, 0x45, 0x64, 0x69, 0x74, 0x48, 0x65, 0x6c, 0x70,
	0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22,
	0x8e, 0x01, 0x0a, 0x24, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x48, 0x65, 0x6c, 0x70, 0x43, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x68, 0x65, 0x6c, 0x70,
	0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0e, 0x68, 0x65, 0x6c, 0x70, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x22, 0x0a, 0x0c,
	0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65,
	0x22, 0x46, 0x0a, 0x25, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x48, 0x65, 0x6c, 0x70, 0x43, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69,
	0x73, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x6a, 0x0a, 0x24, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x48, 0x65, 0x6c, 0x70, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x26, 0x0a, 0x0e, 0x68, 0x65, 0x6c, 0x70, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x68, 0x65, 0x6c, 0x70, 0x43, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67,
	0x75, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67,
	0x75, 0x61, 0x67, 0x65, 0x22, 0x46, 0x0a, 0x25, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x48, 0x65,
	0x6c, 0x70, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x69, 0x73, 0x5f, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x09, 0x69, 0x73, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x68, 0x0a, 0x22,
	0x47, 0x65, 0x74, 0x48, 0x65, 0x6c, 0x70, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x68, 0x65, 0x6c, 0x70, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x68, 0x65, 0x6c, 0x70,
	0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61,
	0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61,
	0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x22, 0x8d, 0x01, 0x0a, 0x23, 0x47, 0x65, 0x74, 0x48, 0x65,
	0x6c, 0x70, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26,
	0x0a, 0x0e, 0x68, 0x65, 0x6c, 0x70, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x68, 0x65, 0x6c, 0x70, 0x43, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61,
	0x67, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x7d, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x22, 0x0a, 0x0c, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6e, 0x6f, 0x74, 0x69, 0x63,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0x54, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x38, 0x0a, 0x0d, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x6e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0xbe, 0x01, 0x0a, 0x0c,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b,
	0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x24,
	0x0a, 0x0d, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4e, 0x6f,
	0x74, 0x69, 0x63, 0x65, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x49, 0x64, 0x22, 0x6b, 0x0a, 0x19,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x48, 0x65, 0x6c, 0x70, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x68, 0x65, 0x6c,
	0x70, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0e, 0x68, 0x65, 0x6c, 0x70, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49,
	0x64, 0x12, 0x26, 0x0a, 0x0e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x64, 0x6f, 0x63, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x44, 0x0a, 0x1a, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x48, 0x65, 0x6c, 0x70, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x68, 0x65, 0x6c, 0x70, 0x44,
	0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0e, 0x68, 0x65, 0x6c, 0x70, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22,
	0x43, 0x0a, 0x19, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x48, 0x65, 0x6c, 0x70, 0x44, 0x6f, 0x63,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0e,
	0x68, 0x65, 0x6c, 0x70, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x68, 0x65, 0x6c, 0x70, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x22, 0x3b, 0x0a, 0x1a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x48, 0x65,
	0x6c, 0x70, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x22, 0x69, 0x0a, 0x17, 0x45, 0x64, 0x69, 0x74, 0x48, 0x65, 0x6c, 0x70, 0x44, 0x6f, 0x63,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0e,
	0x68, 0x65, 0x6c, 0x70, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x68, 0x65, 0x6c, 0x70, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x64, 0x6f,
	0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x39, 0x0a, 0x18,
	0x45, 0x64, 0x69, 0x74, 0x48, 0x65, 0x6c, 0x70, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73,
	0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0xba, 0x01, 0x0a, 0x24, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x48, 0x65, 0x6c, 0x70, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x26, 0x0a, 0x0e, 0x68, 0x65, 0x6c, 0x70, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x68, 0x65, 0x6c, 0x70, 0x44, 0x6f,
	0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67,
	0x75, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67,
	0x75, 0x61, 0x67, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x6f, 0x63,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x64, 0x6f,
	0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x22, 0x46, 0x0a, 0x25, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x48, 0x65,
	0x6c, 0x70, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x69, 0x73, 0x5f, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x09, 0x69, 0x73, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x6a, 0x0a, 0x24,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x48, 0x65, 0x6c, 0x70, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x68, 0x65, 0x6c, 0x70, 0x44, 0x6f, 0x63, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x68, 0x65,
	0x6c, 0x70, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x22, 0x46, 0x0a, 0x25, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x48, 0x65, 0x6c, 0x70, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x22, 0x68, 0x0a, 0x22, 0x47, 0x65, 0x74, 0x48, 0x65, 0x6c, 0x70, 0x44, 0x6f, 0x63, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x68, 0x65, 0x6c, 0x70, 0x44, 0x6f,
	0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e,
	0x68, 0x65, 0x6c, 0x70, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x22, 0xb9, 0x01, 0x0a, 0x23, 0x47,
	0x65, 0x74, 0x48, 0x65, 0x6c, 0x70, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x68, 0x65, 0x6c, 0x70, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x68, 0x65, 0x6c, 0x70,
	0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61,
	0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61,
	0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x64,
	0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x28, 0x0a, 0x0f,
	0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x69, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x48, 0x65, 0x6c,
	0x70, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x26, 0x0a, 0x0e, 0x68, 0x65, 0x6c, 0x70, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x68, 0x65, 0x6c, 0x70, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x64, 0x6f, 0x63,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x22, 0x54, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x48, 0x65, 0x6c, 0x70, 0x44, 0x6f, 0x63, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a,
	0x0d, 0x68, 0x65, 0x6c, 0x70, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x48, 0x65, 0x6c, 0x70,
	0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0d, 0x68, 0x65, 0x6c, 0x70, 0x44, 0x6f,
	0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x86, 0x01, 0x0a, 0x0c, 0x48, 0x65, 0x6c, 0x70,
	0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x68, 0x65, 0x6c, 0x70,
	0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0e, 0x68, 0x65, 0x6c, 0x70, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x26, 0x0a, 0x0e, 0x68, 0x65, 0x6c, 0x70, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x68, 0x65, 0x6c, 0x70, 0x43, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x64, 0x6f, 0x63, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x22, 0xb8, 0x01, 0x0a, 0x22, 0x45, 0x64, 0x69, 0x74, 0x48, 0x65, 0x6c, 0x70, 0x44, 0x6f, 0x63,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x68, 0x65, 0x6c, 0x70, 0x44,
	0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0e, 0x68, 0x65, 0x6c, 0x70, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x64,
	0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x74, 0x6c,
	0x65, 0x12, 0x28, 0x0a, 0x0f, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x64, 0x6f, 0x63, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x44, 0x0a, 0x23, 0x45,
	0x64, 0x69, 0x74, 0x48, 0x65, 0x6c, 0x70, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x22, 0x8c, 0x01, 0x0a, 0x22, 0x45, 0x64, 0x69, 0x74, 0x48, 0x65, 0x6c, 0x70, 0x43, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x68, 0x65, 0x6c, 0x70,
	0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0e, 0x68, 0x65, 0x6c, 0x70, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x22, 0x0a, 0x0c,
	0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65,
	0x22, 0x44, 0x0a, 0x23, 0x45, 0x64, 0x69, 0x74, 0x48, 0x65, 0x6c, 0x70, 0x43, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x53,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0xe2, 0x01, 0x0a, 0x1f, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x6e, 0x6f,
	0x74, 0x69, 0x63, 0x65, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x24, 0x0a, 0x0d,
	0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x43, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x6e, 0x6f, 0x74, 0x69,
	0x63, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x23, 0x0a, 0x0d, 0x6e, 0x6f,
	0x74, 0x69, 0x63, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0c, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x2a, 0x0a, 0x11, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x6e, 0x6f, 0x74, 0x69,
	0x63, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x69, 0x0a, 0x20, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x26,
	0x0a, 0x0e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4e, 0x6f,
	0x74, 0x69, 0x63, 0x65, 0x49, 0x64, 0x22, 0x88, 0x02, 0x0a, 0x1d, 0x45, 0x64, 0x69, 0x74, 0x53,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x6e, 0x6f, 0x74, 0x69,
	0x63, 0x65, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6e,
	0x6f, 0x74, 0x69, 0x63, 0x65, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x6e, 0x6f,
	0x74, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x12, 0x26, 0x0a, 0x0e, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65,
	0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x23, 0x0a, 0x0d, 0x6e, 0x6f, 0x74, 0x69,
	0x63, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0c, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2a, 0x0a,
	0x11, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x73, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x49,
	0x64, 0x22, 0x3f, 0x0a, 0x1e, 0x45, 0x64, 0x69, 0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x53, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x22, 0x6c, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x43, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x6e, 0x6f, 0x74,
	0x69, 0x63, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x23, 0x0a, 0x0d, 0x6e,
	0x6f, 0x74, 0x69, 0x63, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0c, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x22, 0xfd, 0x01, 0x0a, 0x12, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x6e, 0x6f, 0x74, 0x69, 0x63,
	0x65, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6e, 0x6f,
	0x74, 0x69, 0x63, 0x65, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x6e, 0x6f, 0x74,
	0x69, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12,
	0x26, 0x0a, 0x0e, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x23, 0x0a, 0x0d, 0x6e, 0x6f, 0x74, 0x69, 0x63,
	0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c,
	0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2a, 0x0a, 0x11,
	0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x73, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x49, 0x64,
	0x22, 0x6c, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x4a, 0x0a, 0x13, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x13, 0x73, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x48,
	0x0a, 0x1e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x26, 0x0a, 0x0e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x49, 0x64, 0x22, 0x8a, 0x02, 0x0a, 0x1f, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x24,
	0x0a, 0x0d, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x43, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x6e, 0x6f,
	0x74, 0x69, 0x63, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x23, 0x0a, 0x0d,
	0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0c, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x2a, 0x0a, 0x11, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x6e, 0x6f,
	0x74, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x26, 0x0a,
	0x0e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x49, 0x64, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4e, 0x6f, 0x74,
	0x69, 0x63, 0x65, 0x49, 0x64, 0x22, 0xe2, 0x01, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12,
	0x23, 0x0a, 0x0d, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x69,
	0x63, 0x65, 0x49, 0x64, 0x12, 0x33, 0x0a, 0x15, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x4e, 0x6f,
	0x74, 0x69, 0x63, 0x65, 0x5f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x14, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x63,
	0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x2f, 0x0a, 0x13, 0x72, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x12, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x4e, 0x6f,
	0x74, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x35, 0x0a, 0x14, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x22, 0xe2, 0x01, 0x0a, 0x13, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x4e, 0x6f, 0x74, 0x69,
	0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x33, 0x0a, 0x15, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x4e, 0x6f, 0x74, 0x69,
	0x63, 0x65, 0x5f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x14, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x2f, 0x0a, 0x13, 0x72, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x12, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x4e, 0x6f, 0x74, 0x69,
	0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x6c, 0x61, 0x73, 0x74,
	0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x6c, 0x61, 0x73, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x22, 0x95, 0x02, 0x0a, 0x06, 0x4e, 0x6f, 0x74, 0x69, 0x63,
	0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4e, 0x6f, 0x74, 0x69, 0x63,
	0x65, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x69, 0x63,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x75, 0x73, 0x65, 0x72,
	0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x33, 0x0a, 0x15, 0x72, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x5f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x14, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x4e,
	0x6f, 0x74, 0x69, 0x63, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x2f, 0x0a,
	0x13, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x12, 0x72, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1e,
	0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x3c,
	0x0a, 0x14, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x24, 0x0a, 0x06, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x4e, 0x6f,
	0x74, 0x69, 0x63, 0x65, 0x52, 0x06, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x22, 0x50, 0x0a, 0x18,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x63,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x1b, 0x0a, 0x09, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x49, 0x64, 0x22, 0x50,
	0x0a, 0x19, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x4e, 0x6f, 0x74,
	0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x15, 0x72,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x5f, 0x63, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x14, 0x72, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x22, 0x2d, 0x0a, 0x15, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22,
	0x2b, 0x0a, 0x13, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x8b, 0x01, 0x0a,
	0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x6f, 0x74, 0x69,
	0x63, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x2f, 0x0a, 0x13, 0x72, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x12, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x4e, 0x6f,
	0x74, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x60, 0x0a, 0x1a, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x75, 0x73, 0x65, 0x72,
	0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0c, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x69, 0x73, 0x5f, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x09, 0x69, 0x73, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x42, 0x0a, 0x1b,
	0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x75,
	0x73, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x49, 0x64,
	0x22, 0x83, 0x01, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x25, 0x0a, 0x0e, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x6f, 0x74, 0x69, 0x63,
	0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x23, 0x0a, 0x0d, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x58, 0x0a, 0x10, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x11, 0x75, 0x73,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x11, 0x75,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x73,
	0x22, 0x73, 0x0a, 0x10, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x77, 0x69, 0x74,
	0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x61, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x41,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x22, 0x84, 0x01, 0x0a, 0x18, 0x51, 0x75, 0x65, 0x72, 0x79, 0x48,
	0x65, 0x6c, 0x70, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x69, 0x73, 0x53, 0x68, 0x6f, 0x77, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x69, 0x73,
	0x53, 0x68, 0x6f, 0x77, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x61, 0x73, 0x74, 0x49, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6c, 0x61, 0x73, 0x74, 0x49, 0x64, 0x22, 0x6b, 0x0a, 0x0d,
	0x54, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x1e, 0x0a,
	0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x22, 0x0a,
	0x0c, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x73, 0x53, 0x68, 0x6f, 0x77, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x69, 0x73, 0x53, 0x68, 0x6f, 0x77, 0x22, 0x78, 0x0a, 0x19, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x48, 0x65, 0x6c, 0x70, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x3b, 0x0a, 0x0e, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x52, 0x0e, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x73, 0x22, 0x70, 0x0a, 0x18, 0x51, 0x75, 0x65, 0x72, 0x79, 0x48, 0x65, 0x6c, 0x70,
	0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x24, 0x0a, 0x0d, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x74, 0x6c, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x73, 0x53, 0x68, 0x6f, 0x77, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x69, 0x73, 0x53, 0x68, 0x6f, 0x77, 0x12, 0x16, 0x0a,
	0x06, 0x6c, 0x61, 0x73, 0x74, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6c,
	0x61, 0x73, 0x74, 0x49, 0x64, 0x22, 0x91, 0x01, 0x0a, 0x0d, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x44,
	0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x6f, 0x63, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x64, 0x6f, 0x63,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x64, 0x6f, 0x63, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x22, 0x0a,
	0x0c, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x73, 0x53, 0x68, 0x6f, 0x77, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x69, 0x73, 0x53, 0x68, 0x6f, 0x77, 0x22, 0x78, 0x0a, 0x19, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x48, 0x65, 0x6c, 0x70, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x3b, 0x0a, 0x0e, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x44,
	0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x44, 0x6f, 0x63, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x0e, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x32, 0xf7, 0x1c, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x12, 0x25, 0x0a, 0x04,
	0x50, 0x69, 0x6e, 0x67, 0x12, 0x0d, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x0e, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x0d, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x0d, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x37, 0x0a, 0x0b, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x0d, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x0e, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x54, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x54, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x49,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x54, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x12, 0x17, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x12, 0x19, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x51,
	0x0a, 0x10, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x54, 0x6f, 0x64, 0x61, 0x79, 0x49, 0x6e, 0x76, 0x69,
	0x74, 0x65, 0x12, 0x1d, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x54,
	0x6f, 0x64, 0x61, 0x79, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1e, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x54, 0x6f,
	0x64, 0x61, 0x79, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x42, 0x0a, 0x0b, 0x41, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x18, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x41, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x2e, 0x41, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x09, 0x51, 0x75, 0x65, 0x72, 0x79, 0x55, 0x73,
	0x65, 0x72, 0x12, 0x16, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x0d, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x16, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x08, 0x41, 0x64, 0x64,
	0x41, 0x64, 0x6d, 0x69, 0x6e, 0x12, 0x15, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x41, 0x64, 0x64,
	0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x2e, 0x41, 0x64, 0x64, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x0a, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x4c, 0x6f, 0x67,
	0x69, 0x6e, 0x12, 0x17, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x0b, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x41,
	0x64, 0x6d, 0x69, 0x6e, 0x12, 0x18, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x41, 0x64, 0x6d, 0x69,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a, 0x0c, 0x41, 0x64, 0x64,
	0x42, 0x6c, 0x61, 0x63, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x19, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x2e, 0x41, 0x64, 0x64, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x41, 0x64, 0x64, 0x42,
	0x6c, 0x61, 0x63, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x4b, 0x0a, 0x0e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x1b, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x42,
	0x6c, 0x61, 0x63, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1c, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x42, 0x6c, 0x61, 0x63,
	0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4e, 0x0a,
	0x0f, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x1c, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x42, 0x6c,
	0x61, 0x63, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x42, 0x6c, 0x61, 0x63,
	0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54, 0x0a,
	0x11, 0x47, 0x65, 0x74, 0x48, 0x65, 0x6c, 0x70, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69,
	0x65, 0x73, 0x12, 0x1e, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x48, 0x65, 0x6c,
	0x70, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x48, 0x65, 0x6c,
	0x70, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x48, 0x65, 0x6c,
	0x70, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x1f, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x48, 0x65, 0x6c, 0x70, 0x43, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x48, 0x65, 0x6c, 0x70, 0x43, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x12,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x48, 0x65, 0x6c, 0x70, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x12, 0x1f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x48, 0x65, 0x6c, 0x70, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x48, 0x65, 0x6c, 0x70, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x51, 0x0a, 0x10, 0x45, 0x64, 0x69, 0x74, 0x48, 0x65, 0x6c,
	0x70, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x1d, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x2e, 0x45, 0x64, 0x69, 0x74, 0x48, 0x65, 0x6c, 0x70, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e,
	0x45, 0x64, 0x69, 0x74, 0x48, 0x65, 0x6c, 0x70, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x78, 0x0a, 0x1d, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x48, 0x65, 0x6c, 0x70, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x48, 0x65, 0x6c, 0x70, 0x43, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x48, 0x65, 0x6c, 0x70, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x78, 0x0a, 0x1d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x48, 0x65, 0x6c, 0x70,
	0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x48, 0x65, 0x6c, 0x70, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2b, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x48, 0x65, 0x6c,
	0x70, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x72, 0x0a, 0x1b,
	0x47, 0x65, 0x74, 0x48, 0x65, 0x6c, 0x70, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x28, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x48, 0x65, 0x6c, 0x70, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74,
	0x48, 0x65, 0x6c, 0x70, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x72, 0x0a, 0x1b, 0x45, 0x64, 0x69, 0x74, 0x48, 0x65, 0x6c, 0x70, 0x43, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x28, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x45, 0x64, 0x69, 0x74, 0x48, 0x65, 0x6c, 0x70, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x2e, 0x45, 0x64, 0x69, 0x74, 0x48, 0x65, 0x6c, 0x70, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54, 0x0a, 0x11, 0x51, 0x75, 0x65, 0x72, 0x79, 0x48, 0x65, 0x6c,
	0x70, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x1e, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x48, 0x65, 0x6c, 0x70, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x48, 0x65, 0x6c, 0x70, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x51, 0x0a, 0x10, 0x47, 0x65,
	0x74, 0x48, 0x65, 0x6c, 0x70, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x1d,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x48, 0x65, 0x6c, 0x70, 0x44, 0x6f, 0x63,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x48, 0x65, 0x6c, 0x70, 0x44, 0x6f, 0x63, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a,
	0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x48, 0x65, 0x6c, 0x70, 0x44, 0x6f, 0x63, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x12, 0x1f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x48, 0x65, 0x6c, 0x70, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x48, 0x65, 0x6c, 0x70, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x48, 0x65, 0x6c, 0x70, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1f, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x48, 0x65, 0x6c, 0x70, 0x44, 0x6f,
	0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x48, 0x65, 0x6c, 0x70, 0x44,
	0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x51, 0x0a, 0x10, 0x45, 0x64, 0x69, 0x74, 0x48, 0x65, 0x6c, 0x70, 0x44, 0x6f, 0x63, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x12, 0x1d, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x45, 0x64, 0x69, 0x74, 0x48,
	0x65, 0x6c, 0x70, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x45, 0x64, 0x69, 0x74, 0x48, 0x65,
	0x6c, 0x70, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x78, 0x0a, 0x1d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x48, 0x65, 0x6c, 0x70,
	0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x48, 0x65, 0x6c, 0x70, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2b, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x48, 0x65, 0x6c,
	0x70, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x78, 0x0a, 0x1d,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x48, 0x65, 0x6c, 0x70, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x48, 0x65, 0x6c, 0x70, 0x44,
	0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x48, 0x65, 0x6c, 0x70, 0x44, 0x6f, 0x63, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x72, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x48, 0x65, 0x6c,
	0x70, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x28, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74,
	0x48, 0x65, 0x6c, 0x70, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x29, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x48, 0x65, 0x6c, 0x70, 0x44, 0x6f,
	0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x72, 0x0a, 0x1b, 0x45, 0x64,
	0x69, 0x74, 0x48, 0x65, 0x6c, 0x70, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x2e, 0x45, 0x64, 0x69, 0x74, 0x48, 0x65, 0x6c, 0x70, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x45, 0x64, 0x69, 0x74, 0x48,
	0x65, 0x6c, 0x70, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54,
	0x0a, 0x11, 0x51, 0x75, 0x65, 0x72, 0x79, 0x48, 0x65, 0x6c, 0x70, 0x44, 0x6f, 0x63, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x12, 0x1e, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x48, 0x65, 0x6c, 0x70, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x48, 0x65, 0x6c, 0x70, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x69, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x25, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x63, 0x0a, 0x16, 0x45, 0x64, 0x69, 0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x2e, 0x45, 0x64, 0x69, 0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x45, 0x64, 0x69, 0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x63, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x53, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x23,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x66, 0x0a, 0x17, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x45, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x63,
	0x65, 0x12, 0x19, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e,
	0x6f, 0x74, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a, 0x0c, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x12, 0x19, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x54, 0x0a, 0x11, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x4e, 0x6f,
	0x74, 0x69, 0x63, 0x65, 0x12, 0x1e, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5d,
	0x0a, 0x14, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x21, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x47, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x08, 0x5a,
	0x06, 0x2e, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_user_proto_rawDescOnce sync.Once
	file_user_proto_rawDescData = file_user_proto_rawDesc
)

func file_user_proto_rawDescGZIP() []byte {
	file_user_proto_rawDescOnce.Do(func() {
		file_user_proto_rawDescData = protoimpl.X.CompressGZIP(file_user_proto_rawDescData)
	})
	return file_user_proto_rawDescData
}

var file_user_proto_msgTypes = make([]protoimpl.MessageInfo, 93)
var file_user_proto_goTypes = []interface{}{
	(*Request)(nil),                               // 0: user.Request
	(*Response)(nil),                              // 1: user.Response
	(*CheckTwitterIdRequest)(nil),                 // 2: user.CheckTwitterIdRequest
	(*CheckTwitterIdResponse)(nil),                // 3: user.CheckTwitterIdResponse
	(*CreateUserRequest)(nil),                     // 4: user.CreateUserRequest
	(*CreateUserResponse)(nil),                    // 5: user.CreateUserResponse
	(*CreateInviteRequest)(nil),                   // 6: user.CreateInviteRequest
	(*CreateInviteResponse)(nil),                  // 7: user.CreateInviteResponse
	(*CheckTodayInviteRequest)(nil),               // 8: user.CheckTodayInviteRequest
	(*CheckTodayInviteResponse)(nil),              // 9: user.CheckTodayInviteResponse
	(*AddUserInfoRequest)(nil),                    // 10: user.AddUserInfoRequest
	(*AddUserInfoResponse)(nil),                   // 11: user.AddUserInfoResponse
	(*QueryUserRequest)(nil),                      // 12: user.QueryUserRequest
	(*QueryUserResponse)(nil),                     // 13: user.QueryUserResponse
	(*AddBlackListRequest)(nil),                   // 14: user.AddBlackListRequest
	(*AddBlackListResponse)(nil),                  // 15: user.AddBlackListResponse
	(*QueryBlackListRequest)(nil),                 // 16: user.QueryBlackListRequest
	(*QueryBlackListResponse)(nil),                // 17: user.QueryBlackListResponse
	(*RemoveBlackListRequest)(nil),                // 18: user.RemoveBlackListRequest
	(*RemoveBlackListResponse)(nil),               // 19: user.RemoveBlackListResponse
	(*AddAdminRequest)(nil),                       // 20: user.AddAdminRequest
	(*AddAdminResponse)(nil),                      // 21: user.AddAdminResponse
	(*AdminLoginRequest)(nil),                     // 22: user.AdminLoginRequest
	(*AdminLoginResponse)(nil),                    // 23: user.AdminLoginResponse
	(*RemoveAdminRequest)(nil),                    // 24: user.RemoveAdminRequest
	(*RemoveAdminResponse)(nil),                   // 25: user.RemoveAdminResponse
	(*GetHelpCategoriesRequest)(nil),              // 26: user.GetHelpCategoriesRequest
	(*HelpCategory)(nil),                          // 27: user.HelpCategory
	(*GetHelpCategoriesResponse)(nil),             // 28: user.GetHelpCategoriesResponse
	(*CreateHelpCategoryRequest)(nil),             // 29: user.CreateHelpCategoryRequest
	(*CreateHelpCategoryResponse)(nil),            // 30: user.CreateHelpCategoryResponse
	(*DeleteHelpCategoryRequest)(nil),             // 31: user.DeleteHelpCategoryRequest
	(*DeleteHelpCategoryResponse)(nil),            // 32: user.DeleteHelpCategoryResponse
	(*EditHelpCategoryRequest)(nil),               // 33: user.EditHelpCategoryRequest
	(*EditHelpCategoryResponse)(nil),              // 34: user.EditHelpCategoryResponse
	(*CreateHelpCategoryTranslationRequest)(nil),  // 35: user.CreateHelpCategoryTranslationRequest
	(*CreateHelpCategoryTranslationResponse)(nil), // 36: user.CreateHelpCategoryTranslationResponse
	(*DeleteHelpCategoryTranslationRequest)(nil),  // 37: user.DeleteHelpCategoryTranslationRequest
	(*DeleteHelpCategoryTranslationResponse)(nil), // 38: user.DeleteHelpCategoryTranslationResponse
	(*GetHelpCategoryTranslationsRequest)(nil),    // 39: user.GetHelpCategoryTranslationsRequest
	(*GetHelpCategoryTranslationsResponse)(nil),   // 40: user.GetHelpCategoryTranslationsResponse
	(*GetNotificationsRequest)(nil),               // 41: user.GetNotificationsRequest
	(*GetNotificationsResponse)(nil),              // 42: user.GetNotificationsResponse
	(*Notification)(nil),                          // 43: user.Notification
	(*CreateHelpDocumentRequest)(nil),             // 44: user.CreateHelpDocumentRequest
	(*CreateHelpDocumentResponse)(nil),            // 45: user.CreateHelpDocumentResponse
	(*DeleteHelpDocumentRequest)(nil),             // 46: user.DeleteHelpDocumentRequest
	(*DeleteHelpDocumentResponse)(nil),            // 47: user.DeleteHelpDocumentResponse
	(*EditHelpDocumentRequest)(nil),               // 48: user.EditHelpDocumentRequest
	(*EditHelpDocumentResponse)(nil),              // 49: user.EditHelpDocumentResponse
	(*CreateHelpDocumentTranslationRequest)(nil),  // 50: user.CreateHelpDocumentTranslationRequest
	(*CreateHelpDocumentTranslationResponse)(nil), // 51: user.CreateHelpDocumentTranslationResponse
	(*DeleteHelpDocumentTranslationRequest)(nil),  // 52: user.DeleteHelpDocumentTranslationRequest
	(*DeleteHelpDocumentTranslationResponse)(nil), // 53: user.DeleteHelpDocumentTranslationResponse
	(*GetHelpDocumentTranslationsRequest)(nil),    // 54: user.GetHelpDocumentTranslationsRequest
	(*GetHelpDocumentTranslationsResponse)(nil),   // 55: user.GetHelpDocumentTranslationsResponse
	(*GetHelpDocumentsRequest)(nil),               // 56: user.GetHelpDocumentsRequest
	(*GetHelpDocumentsResponse)(nil),              // 57: user.GetHelpDocumentsResponse
	(*HelpDocument)(nil),                          // 58: user.HelpDocument
	(*EditHelpDocumentTranslationRequest)(nil),    // 59: user.EditHelpDocumentTranslationRequest
	(*EditHelpDocumentTranslationResponse)(nil),   // 60: user.EditHelpDocumentTranslationResponse
	(*EditHelpCategoryTranslationRequest)(nil),    // 61: user.EditHelpCategoryTranslationRequest
	(*EditHelpCategoryTranslationResponse)(nil),   // 62: user.EditHelpCategoryTranslationResponse
	(*CreateSystemNotificationRequest)(nil),       // 63: user.CreateSystemNotificationRequest
	(*CreateSystemNotificationResponse)(nil),      // 64: user.CreateSystemNotificationResponse
	(*EditSystemNotificationRequest)(nil),         // 65: user.EditSystemNotificationRequest
	(*EditSystemNotificationResponse)(nil),        // 66: user.EditSystemNotificationResponse
	(*GetSystemNotificationsRequest)(nil),         // 67: user.GetSystemNotificationsRequest
	(*SystemNotification)(nil),                    // 68: user.SystemNotification
	(*GetSystemNotificationsResponse)(nil),        // 69: user.GetSystemNotificationsResponse
	(*QuerySystemNotificationRequest)(nil),        // 70: user.QuerySystemNotificationRequest
	(*QuerySystemNotificationResponse)(nil),       // 71: user.QuerySystemNotificationResponse
	(*CreateNoticeRequest)(nil),                   // 72: user.CreateNoticeRequest
	(*CreateNoticeResponse)(nil),                  // 73: user.CreateNoticeResponse
	(*RecordNoticeRequest)(nil),                   // 74: user.RecordNoticeRequest
	(*Notice)(nil),                                // 75: user.Notice
	(*RecordNoticeResponse)(nil),                  // 76: user.RecordNoticeResponse
	(*QueryRecordNoticeRequest)(nil),              // 77: user.QueryRecordNoticeRequest
	(*QueryRecordNoticeResponse)(nil),             // 78: user.QueryRecordNoticeResponse
	(*RegisterCountResponse)(nil),                 // 79: user.RegisterCountResponse
	(*OnlineCountResponse)(nil),                   // 80: user.OnlineCountResponse
	(*CreateNotificationRequest)(nil),             // 81: user.CreateNotificationRequest
	(*CreateNotificationResponse)(nil),            // 82: user.CreateNotificationResponse
	(*GetUserNotificationsRequest)(nil),           // 83: user.GetUserNotificationsRequest
	(*GetUserNotificationsResponse)(nil),          // 84: user.GetUserNotificationsResponse
	(*UserListResponse)(nil),                      // 85: user.UserListResponse
	(*UserResponseList)(nil),                      // 86: user.UserResponseList
	(*QueryHelpCategoryRequest)(nil),              // 87: user.QueryHelpCategoryRequest
	(*TotalCategory)(nil),                         // 88: user.TotalCategory
	(*QueryHelpCategoryResponse)(nil),             // 89: user.QueryHelpCategoryResponse
	(*QueryHelpDocumentRequest)(nil),              // 90: user.QueryHelpDocumentRequest
	(*TotalDocument)(nil),                         // 91: user.TotalDocument
	(*QueryHelpDocumentResponse)(nil),             // 92: user.QueryHelpDocumentResponse
}
var file_user_proto_depIdxs = []int32{
	27, // 0: user.GetHelpCategoriesResponse.help_categories:type_name -> user.HelpCategory
	43, // 1: user.GetNotificationsResponse.notifications:type_name -> user.Notification
	58, // 2: user.GetHelpDocumentsResponse.helpDocuments:type_name -> user.HelpDocument
	68, // 3: user.GetSystemNotificationsResponse.systemNotifications:type_name -> user.SystemNotification
	75, // 4: user.RecordNoticeResponse.notice:type_name -> user.Notice
	86, // 5: user.UserListResponse.userResponseLists:type_name -> user.UserResponseList
	88, // 6: user.QueryHelpCategoryResponse.totalCategorys:type_name -> user.TotalCategory
	91, // 7: user.QueryHelpDocumentResponse.totalDocuments:type_name -> user.TotalDocument
	0,  // 8: user.User.Ping:input_type -> user.Request
	0,  // 9: user.User.RegisterCount:input_type -> user.Request
	0,  // 10: user.User.OnlineCount:input_type -> user.Request
	2,  // 11: user.User.CheckTwitterId:input_type -> user.CheckTwitterIdRequest
	4,  // 12: user.User.CreateUser:input_type -> user.CreateUserRequest
	6,  // 13: user.User.CreateInvite:input_type -> user.CreateInviteRequest
	8,  // 14: user.User.CheckTodayInvite:input_type -> user.CheckTodayInviteRequest
	10, // 15: user.User.AddUserInfo:input_type -> user.AddUserInfoRequest
	12, // 16: user.User.QueryUser:input_type -> user.QueryUserRequest
	0,  // 17: user.User.GetUserList:input_type -> user.Request
	20, // 18: user.User.AddAdmin:input_type -> user.AddAdminRequest
	22, // 19: user.User.AdminLogin:input_type -> user.AdminLoginRequest
	24, // 20: user.User.RemoveAdmin:input_type -> user.RemoveAdminRequest
	14, // 21: user.User.AddBlackList:input_type -> user.AddBlackListRequest
	16, // 22: user.User.QueryBlackList:input_type -> user.QueryBlackListRequest
	18, // 23: user.User.RemoveBlackList:input_type -> user.RemoveBlackListRequest
	26, // 24: user.User.GetHelpCategories:input_type -> user.GetHelpCategoriesRequest
	29, // 25: user.User.CreateHelpCategory:input_type -> user.CreateHelpCategoryRequest
	31, // 26: user.User.DeleteHelpCategory:input_type -> user.DeleteHelpCategoryRequest
	33, // 27: user.User.EditHelpCategory:input_type -> user.EditHelpCategoryRequest
	35, // 28: user.User.CreateHelpCategoryTranslation:input_type -> user.CreateHelpCategoryTranslationRequest
	37, // 29: user.User.DeleteHelpCategoryTranslation:input_type -> user.DeleteHelpCategoryTranslationRequest
	39, // 30: user.User.GetHelpCategoryTranslations:input_type -> user.GetHelpCategoryTranslationsRequest
	61, // 31: user.User.EditHelpCategoryTranslation:input_type -> user.EditHelpCategoryTranslationRequest
	87, // 32: user.User.QueryHelpCategory:input_type -> user.QueryHelpCategoryRequest
	56, // 33: user.User.GetHelpDocuments:input_type -> user.GetHelpDocumentsRequest
	44, // 34: user.User.CreateHelpDocument:input_type -> user.CreateHelpDocumentRequest
	46, // 35: user.User.DeleteHelpDocument:input_type -> user.DeleteHelpDocumentRequest
	48, // 36: user.User.EditHelpDocument:input_type -> user.EditHelpDocumentRequest
	50, // 37: user.User.CreateHelpDocumentTranslation:input_type -> user.CreateHelpDocumentTranslationRequest
	52, // 38: user.User.DeleteHelpDocumentTranslation:input_type -> user.DeleteHelpDocumentTranslationRequest
	54, // 39: user.User.GetHelpDocumentTranslations:input_type -> user.GetHelpDocumentTranslationsRequest
	59, // 40: user.User.EditHelpDocumentTranslation:input_type -> user.EditHelpDocumentTranslationRequest
	90, // 41: user.User.QueryHelpDocument:input_type -> user.QueryHelpDocumentRequest
	63, // 42: user.User.CreateSystemNotification:input_type -> user.CreateSystemNotificationRequest
	65, // 43: user.User.EditSystemNotification:input_type -> user.EditSystemNotificationRequest
	67, // 44: user.User.GetSystemNotifications:input_type -> user.GetSystemNotificationsRequest
	70, // 45: user.User.QuerySystemNotification:input_type -> user.QuerySystemNotificationRequest
	72, // 46: user.User.CreateNotice:input_type -> user.CreateNoticeRequest
	74, // 47: user.User.RecordNotice:input_type -> user.RecordNoticeRequest
	77, // 48: user.User.QueryRecordNotice:input_type -> user.QueryRecordNoticeRequest
	81, // 49: user.User.CreateNotification:input_type -> user.CreateNotificationRequest
	83, // 50: user.User.GetUserNotifications:input_type -> user.GetUserNotificationsRequest
	1,  // 51: user.User.Ping:output_type -> user.Response
	79, // 52: user.User.RegisterCount:output_type -> user.RegisterCountResponse
	80, // 53: user.User.OnlineCount:output_type -> user.OnlineCountResponse
	3,  // 54: user.User.CheckTwitterId:output_type -> user.CheckTwitterIdResponse
	5,  // 55: user.User.CreateUser:output_type -> user.CreateUserResponse
	7,  // 56: user.User.CreateInvite:output_type -> user.CreateInviteResponse
	9,  // 57: user.User.CheckTodayInvite:output_type -> user.CheckTodayInviteResponse
	11, // 58: user.User.AddUserInfo:output_type -> user.AddUserInfoResponse
	13, // 59: user.User.QueryUser:output_type -> user.QueryUserResponse
	85, // 60: user.User.GetUserList:output_type -> user.UserListResponse
	21, // 61: user.User.AddAdmin:output_type -> user.AddAdminResponse
	23, // 62: user.User.AdminLogin:output_type -> user.AdminLoginResponse
	25, // 63: user.User.RemoveAdmin:output_type -> user.RemoveAdminResponse
	15, // 64: user.User.AddBlackList:output_type -> user.AddBlackListResponse
	17, // 65: user.User.QueryBlackList:output_type -> user.QueryBlackListResponse
	19, // 66: user.User.RemoveBlackList:output_type -> user.RemoveBlackListResponse
	28, // 67: user.User.GetHelpCategories:output_type -> user.GetHelpCategoriesResponse
	30, // 68: user.User.CreateHelpCategory:output_type -> user.CreateHelpCategoryResponse
	32, // 69: user.User.DeleteHelpCategory:output_type -> user.DeleteHelpCategoryResponse
	34, // 70: user.User.EditHelpCategory:output_type -> user.EditHelpCategoryResponse
	36, // 71: user.User.CreateHelpCategoryTranslation:output_type -> user.CreateHelpCategoryTranslationResponse
	38, // 72: user.User.DeleteHelpCategoryTranslation:output_type -> user.DeleteHelpCategoryTranslationResponse
	40, // 73: user.User.GetHelpCategoryTranslations:output_type -> user.GetHelpCategoryTranslationsResponse
	62, // 74: user.User.EditHelpCategoryTranslation:output_type -> user.EditHelpCategoryTranslationResponse
	89, // 75: user.User.QueryHelpCategory:output_type -> user.QueryHelpCategoryResponse
	57, // 76: user.User.GetHelpDocuments:output_type -> user.GetHelpDocumentsResponse
	45, // 77: user.User.CreateHelpDocument:output_type -> user.CreateHelpDocumentResponse
	47, // 78: user.User.DeleteHelpDocument:output_type -> user.DeleteHelpDocumentResponse
	49, // 79: user.User.EditHelpDocument:output_type -> user.EditHelpDocumentResponse
	51, // 80: user.User.CreateHelpDocumentTranslation:output_type -> user.CreateHelpDocumentTranslationResponse
	53, // 81: user.User.DeleteHelpDocumentTranslation:output_type -> user.DeleteHelpDocumentTranslationResponse
	55, // 82: user.User.GetHelpDocumentTranslations:output_type -> user.GetHelpDocumentTranslationsResponse
	60, // 83: user.User.EditHelpDocumentTranslation:output_type -> user.EditHelpDocumentTranslationResponse
	92, // 84: user.User.QueryHelpDocument:output_type -> user.QueryHelpDocumentResponse
	64, // 85: user.User.CreateSystemNotification:output_type -> user.CreateSystemNotificationResponse
	66, // 86: user.User.EditSystemNotification:output_type -> user.EditSystemNotificationResponse
	69, // 87: user.User.GetSystemNotifications:output_type -> user.GetSystemNotificationsResponse
	71, // 88: user.User.QuerySystemNotification:output_type -> user.QuerySystemNotificationResponse
	73, // 89: user.User.CreateNotice:output_type -> user.CreateNoticeResponse
	76, // 90: user.User.RecordNotice:output_type -> user.RecordNoticeResponse
	78, // 91: user.User.QueryRecordNotice:output_type -> user.QueryRecordNoticeResponse
	82, // 92: user.User.CreateNotification:output_type -> user.CreateNotificationResponse
	84, // 93: user.User.GetUserNotifications:output_type -> user.GetUserNotificationsResponse
	51, // [51:94] is the sub-list for method output_type
	8,  // [8:51] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_user_proto_init() }
func file_user_proto_init() {
	if File_user_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_user_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckTwitterIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckTwitterIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateInviteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateInviteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckTodayInviteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckTodayInviteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddUserInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddUserInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddBlackListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddBlackListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryBlackListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryBlackListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveBlackListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveBlackListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddAdminRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddAdminResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminLoginRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdminLoginResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveAdminRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveAdminResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHelpCategoriesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HelpCategory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHelpCategoriesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateHelpCategoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateHelpCategoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteHelpCategoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteHelpCategoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EditHelpCategoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EditHelpCategoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateHelpCategoryTranslationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateHelpCategoryTranslationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteHelpCategoryTranslationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteHelpCategoryTranslationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHelpCategoryTranslationsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHelpCategoryTranslationsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNotificationsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNotificationsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Notification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateHelpDocumentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateHelpDocumentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteHelpDocumentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteHelpDocumentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EditHelpDocumentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EditHelpDocumentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateHelpDocumentTranslationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateHelpDocumentTranslationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteHelpDocumentTranslationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteHelpDocumentTranslationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHelpDocumentTranslationsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHelpDocumentTranslationsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHelpDocumentsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHelpDocumentsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HelpDocument); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EditHelpDocumentTranslationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EditHelpDocumentTranslationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EditHelpCategoryTranslationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EditHelpCategoryTranslationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSystemNotificationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSystemNotificationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EditSystemNotificationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EditSystemNotificationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSystemNotificationsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemNotification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSystemNotificationsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuerySystemNotificationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuerySystemNotificationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateNoticeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateNoticeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecordNoticeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Notice); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecordNoticeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryRecordNoticeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryRecordNoticeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterCountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OnlineCountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateNotificationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateNotificationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[83].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserNotificationsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[84].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserNotificationsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[85].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[86].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserResponseList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[87].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryHelpCategoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[88].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TotalCategory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[89].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryHelpCategoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[90].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryHelpDocumentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[91].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TotalDocument); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[92].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryHelpDocumentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_user_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   93,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_user_proto_goTypes,
		DependencyIndexes: file_user_proto_depIdxs,
		MessageInfos:      file_user_proto_msgTypes,
	}.Build()
	File_user_proto = out.File
	file_user_proto_rawDesc = nil
	file_user_proto_goTypes = nil
	file_user_proto_depIdxs = nil
}
